-- SharkHUB Script - Versão Premium com UI Renovada
-- Serviços principais
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")
local HttpService = game:GetService("HttpService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Workspace = workspace

local LocalPlayer = Players.LocalPlayer
local PlayerGui = LocalPlayer:WaitForChild("PlayerGui")

-- Detectar se é dispositivo móvel
local function isMobile()
    return UserInputService.TouchEnabled and not UserInputService.KeyboardEnabled
end

-- Gerenciador de Conexões - Evita memory leaks
local ConnectionManager = {
    connections = {},
    add = function(self, name, connection)
        if self.connections[name] then
            self.connections[name]:Disconnect()
        end
        self.connections[name] = connection
    end,
    remove = function(self, name)
        if self.connections[name] then
            self.connections[name]:Disconnect()
            self.connections[name] = nil
        end
    end,
    cleanup = function(self)
        for _, connection in pairs(self.connections) do
            connection:Disconnect()
        end
        self.connections = {}
    end
}

-- Gerenciador de Estado - Substitui variáveis globais
local StateManager = {
    floatV1 = false,
    floatV2 = false,
    bestESP = false,
    antiHit = false,
    set = function(self, key, value)
        self[key] = value
    end,
    get = function(self, key)
        return self[key]
    end
}

-- Sistema de Cache - Otimiza FindFirstChild repetitivos
local Cache = {
    instances = {},
    get = function(self, parent, name)
        if not parent then return nil end
        local key = tostring(parent) .. ":" .. name
        if not self.instances[key] then
            self.instances[key] = parent:FindFirstChild(name)
        end
        return self.instances[key]
    end,
    clear = function(self)
        self.instances = {}
    end
}

-- Configurações principais
local Settings = {
    Speed = {enabled = false, value = 50},
    Jump = {enabled = false, value = 90},
    FloatV1 = {enabled = false}, 
    FloatV2 = {enabled = false}, 
    ESP = {enabled = false, color = Color3.fromRGB(0, 162, 232), highlights = {}, nametags = {}},
    ESPBetter = {enabled = false},
    AntiHit = {enabled = false}
}

-- Paleta de cores para ESP - Tema oceânico
local ColorPalette = {
    {name = "Ocean", color = Color3.fromRGB(0, 162, 232)},
    {name = "Deep", color = Color3.fromRGB(0, 100, 148)},
    {name = "Aqua", color = Color3.fromRGB(0, 255, 255)},
    {name = "Coral", color = Color3.fromRGB(255, 127, 80)},
    {name = "Pearl", color = Color3.fromRGB(240, 240, 240)},
    {name = "Kelp", color = Color3.fromRGB(34, 139, 34)},
    {name = "Sand", color = Color3.fromRGB(238, 203, 173)},
    {name = "Storm", color = Color3.fromRGB(70, 70, 110)},
    {name = "Blood", color = Color3.fromRGB(220, 20, 60)},
    {name = "Night", color = Color3.fromRGB(25, 25, 112)},
    {name = "Foam", color = Color3.fromRGB(176, 224, 230)},
    {name = "Reef", color = Color3.fromRGB(127, 255, 212)}
}

-- Configurações padrão para reset
local DefaultSettings = {
    Speed = {enabled = false, value = 50},
    Jump = {enabled = false, value = 90},
    FloatV1 = {enabled = false},
    FloatV2 = {enabled = false},
    ESP = {enabled = false, color = Color3.fromRGB(0, 162, 232)},
    ESPBetter = {enabled = false},
    AntiHit = {enabled = false}
}

local CONFIG_FILE_NAME = "SharkHUB_Config.json"

-- Função otimizada para parsear valores monetários
local function parseValue(text)
    if not text or text == "" then return 0 end
    
    local multipliers = {Q = 1e15, T = 1e12, B = 1e9, M = 1e6, K = 1e3}
    local number, suffix = text:match("([%d%.]+)([QTBMK]?)")
    number = tonumber(number) or 0
    
    return multipliers[suffix] and number * multipliers[suffix] or number
end

-- Variáveis do ESP Better
local currentESP = nil
local highlights = {}

-- ESP Better - Otimizado
local function setupESPBetter()
    ConnectionManager:remove("ESPBetter")
    StateManager:set("bestESP", Settings.ESPBetter.enabled)
    
    if Settings.ESPBetter.enabled then
        local lastUpdate, UPDATE_INTERVAL = 0, 0.1
        
        ConnectionManager:add("ESPBetter", RunService.Heartbeat:Connect(function()
            local currentTime = tick()
            if currentTime - lastUpdate < UPDATE_INTERVAL or not StateManager:get("bestESP") then 
                return 
            end
            lastUpdate = currentTime

            local bestAnimal, bestValue, bestBase = nil, -math.huge, nil

            for _, plot in ipairs(Workspace.Plots:GetChildren()) do
                local plotSign = Cache:get(plot, "PlotSign")
                if plotSign then
                    local surfaceGui = Cache:get(plotSign, "SurfaceGui")
                    local frame = surfaceGui and Cache:get(surfaceGui, "Frame")
                    local textLabel = frame and Cache:get(frame, "TextLabel")
                    
                    if textLabel and textLabel.Text ~= "Empty Base" and not textLabel.Text:find(LocalPlayer.DisplayName) then
                        local animalPodiums = Cache:get(plot, "AnimalPodiums")
                        if animalPodiums then
                            for _, podium in ipairs(animalPodiums:GetChildren()) do
                                local base = Cache:get(podium, "Base")
                                local spawn = base and Cache:get(base, "Spawn")
                                local attach = spawn and Cache:get(spawn, "Attachment")
                                
                                if attach then
                                    local overhead = Cache:get(attach, "AnimalOverhead")
                                    if overhead then
                                        local stolen = Cache:get(overhead, "Stolen")
                                        if not (stolen and (stolen.Text == "FUSING" or stolen.Text == "IN MACHINE" or stolen.Text == "CRAFTING")) then
                                            local gen = Cache:get(overhead, "Generation")
                                            local rarity = Cache:get(overhead, "Rarity")
                                            local name = Cache:get(overhead, "DisplayName")
                                            
                                            if gen and rarity and name then
                                                local value = parseValue(gen.Text)
                                                if value > bestValue then
                                                    bestValue = value
                                                    bestAnimal = {
                                                        attachment = attach, 
                                                        nome = name.Text, 
                                                        raridade = rarity.Text, 
                                                        porSegundo = gen.Text
                                                    }
                                                    bestBase = base
                                                end
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end

            -- Limpar ESP anterior
            if currentESP then 
                currentESP:Destroy() 
                currentESP = nil 
            end
            for _, hl in pairs(highlights) do 
                if hl and hl.Parent then hl:Destroy() end
            end
            highlights = {}

            -- Criar novo ESP se encontrou melhor animal
            if bestAnimal then
                local billboard = Instance.new("BillboardGui")
                billboard.Name = "BestAnimalESP"
                billboard.AlwaysOnTop = true
                billboard.Size = UDim2.new(0.35, 0, 0.65, 0)
                billboard.StudsOffset = Vector3.new(0, 3.2, 0)
                billboard.Parent = bestAnimal.attachment
                
                local back = Instance.new("Frame")
                back.BackgroundTransparency = 0.18
                back.BackgroundColor3 = Color3.fromRGB(0, 40, 70)
                back.Size = UDim2.new(1, 0, 1, 0)
                back.Position = UDim2.new(0.5, 0, 0.5, 0)
                back.AnchorPoint = Vector2.new(0.5, 0.5)
                back.Parent = billboard
                
                local uicorner = Instance.new("UICorner")
                uicorner.CornerRadius = UDim.new(0, 10)
                uicorner.Parent = back
                
                local textLabel = Instance.new("TextLabel")
                textLabel.Size = UDim2.new(0.9, 0, 0.9, 0)
                textLabel.Position = UDim2.new(0.05, 0, 0.05, 0)
                textLabel.BackgroundTransparency = 1
                textLabel.TextColor3 = Color3.fromRGB(0, 255, 255)
                textLabel.TextScaled = true
                textLabel.Font = Enum.Font.GothamBold
                textLabel.Text = string.format("%s | %s | %s", bestAnimal.nome, bestAnimal.raridade, bestAnimal.porSegundo)
                textLabel.TextWrapped = true
                textLabel.Parent = back
                
                currentESP = billboard

                -- Destacar decorações
                local decorations = bestBase and Cache:get(bestBase, "Decorations")
                if decorations then
                    for _, d in ipairs(decorations:GetDescendants()) do
                        local hl = Instance.new("Highlight")
                        hl.Name = "ESP_Deco"
                        hl.FillColor = Color3.fromRGB(0, 162, 232)
                        hl.OutlineColor = Color3.fromRGB(0, 100, 148)
                        hl.FillTransparency = 0
                        hl.Parent = d
                        highlights[d] = hl
                    end
                end
            end
        end))
    else
        -- Limpar ESP quando desabilitado
        if currentESP then
            currentESP:Destroy()
            currentESP = nil
        end
        for _, hl in pairs(highlights) do 
            if hl and hl.Parent then hl:Destroy() end
        end
        highlights = {}
    end
end

-- Sistema Anti-Hit (Desync)
local function setupAntiHit()
    ConnectionManager:remove("AntiHit")
    StateManager:set("antiHit", Settings.AntiHit.enabled)
    
    if Settings.AntiHit.enabled then
        task.spawn(function()
            local success, errorMsg = pcall(function()
                local backpack = LocalPlayer:WaitForChild("Backpack")
                local character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
                local humanoid = character:WaitForChild("Humanoid")
                
                print("🛡️ Iniciando Anti-Hit (Desync)...")
                
                -- Verificar ReplicatedStorage e remotos
                local packages = ReplicatedStorage:WaitForChild("Packages", 5)
                if not packages then 
                    warn("❌ Packages não encontrado no ReplicatedStorage")
                    return false
                end
                
                local netFolder = packages:WaitForChild("Net", 5)
                if not netFolder then 
                    warn("❌ Net folder não encontrado")
                    return false
                end
                
                local useItemRemote = netFolder:WaitForChild("RE/UseItem", 5)
                local teleportRemote = netFolder:WaitForChild("RE/QuantumCloner/OnTeleport", 5)
                
                if not useItemRemote or not teleportRemote then
                    warn("❌ Remotos necessários não encontrados")
                    return false
                end

                -- Procurar pela ferramenta
                local toolNames = {"Quantum Cloner", "Brainrot", "brainrot"}
                local tool = nil
                
                for _, toolName in ipairs(toolNames) do
                    tool = backpack:FindFirstChild(toolName) or character:FindFirstChild(toolName)
                    if tool then
                        print("🔧 Ferramenta Anti-Hit encontrada: " .. tool.Name)
                        break
                    end
                end
                
                -- Se não encontrou, procurar qualquer Tool disponível
                if not tool then
                    for _, item in ipairs(backpack:GetChildren()) do
                        if item:IsA("Tool") then
                            tool = item
                            print("🔧 Usando ferramenta alternativa: " .. tool.Name)
                            break
                        end
                    end
                end
                
                -- Equipar ferramenta se necessário
                if tool then
                    if tool.Parent == backpack then
                        humanoid:EquipTool(tool)
                        task.wait(0.5)
                        print("✅ Ferramenta equipada: " .. tool.Name)
                    end
                else
                    print("⚠️ Nenhuma ferramenta encontrada, tentando continuar...")
                end

                -- Executar sequência do desync
                if setfflag then
                    setfflag("WorldStepMax", "-9999999999")
                    print("✅ WorldStepMax configurado")
                else
                    warn("⚠️ setfflag não disponível, desync pode não funcionar completamente")
                end
                
                task.wait(0.2)
                useItemRemote:FireServer()
                print("✅ UseItem executado")
                
                task.wait(1)
                teleportRemote:FireServer()
                print("✅ Teleport executado")
                
                task.wait(2)
                
                if setfflag then
                    setfflag("WorldStepMax", "-1")
                end
                
                print("✅ Anti-Hit (Desync) ativado com sucesso!")
                return true
            end)
            
            if not success then
                warn("❌ Erro ao ativar Anti-Hit: " .. tostring(errorMsg))
                Settings.AntiHit.enabled = false
                StateManager:set("antiHit", false)
            end
        end)
    else
        -- Desativar desync
        pcall(function()
            if setfflag then
                setfflag("WorldStepMax", "-1")
            end
            print("❌ Anti-Hit (Desync) desativado!")
        end)
    end
end

-- Sistema de ESP Players
local function setupESPPlayers()
    ConnectionManager:remove("ESPPlayers")
    
    -- Limpar ESP existente
    for _, highlight in pairs(Settings.ESP.highlights) do
        if highlight and highlight.Parent then highlight:Destroy() end
    end
    for _, nametag in pairs(Settings.ESP.nametags) do
        if nametag and nametag.Parent then nametag:Destroy() end
    end
    Settings.ESP.highlights = {}
    Settings.ESP.nametags = {}
    
    if Settings.ESP.enabled then
        local function createPlayerESP(player)
            if player == LocalPlayer then return end
            
            local function addESP()
                local character = player.Character
                if not character then return end
                
                local humanoidRootPart = Cache:get(character, "HumanoidRootPart")
                local humanoid = Cache:get(character, "Humanoid")
                if not (humanoidRootPart and humanoid) then return end
                
                -- Criar highlight
                local highlight = Instance.new("Highlight")
                highlight.Name = "PlayerESP"
                highlight.FillColor = Settings.ESP.color
                highlight.OutlineColor = Settings.ESP.color
                highlight.FillTransparency = 0.5
                highlight.OutlineTransparency = 0
                highlight.Parent = character
                Settings.ESP.highlights[player] = highlight
                
                -- Criar nametag
                local billboard = Instance.new("BillboardGui")
                billboard.Name = "PlayerNameTag"
                billboard.AlwaysOnTop = true
                billboard.Size = UDim2.new(0, 200, 0, 50)
                billboard.StudsOffset = Vector3.new(0, 3, 0)
                billboard.Parent = humanoidRootPart
                
                local nameLabel = Instance.new("TextLabel")
                nameLabel.Size = UDim2.new(1, 0, 1, 0)
                nameLabel.BackgroundTransparency = 1
                nameLabel.Text = player.DisplayName
                nameLabel.TextColor3 = Settings.ESP.color
                nameLabel.TextSize = 18
                nameLabel.Font = Enum.Font.GothamBold
                nameLabel.TextStrokeTransparency = 0
                nameLabel.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
                nameLabel.Parent = billboard
                
                Settings.ESP.nametags[player] = billboard
            end
            
            if player.Character then
                addESP()
            end
            
            player.CharacterAdded:Connect(addESP)
        end
        
        -- Adicionar ESP para jogadores existentes
        for _, player in ipairs(Players:GetPlayers()) do
            createPlayerESP(player)
        end
        
        -- Adicionar ESP para novos jogadores
        ConnectionManager:add("ESPPlayers", Players.PlayerAdded:Connect(createPlayerESP))
        
        -- Remover ESP quando jogadores saem
        ConnectionManager:add("ESPPlayersRemoving", Players.PlayerRemoving:Connect(function(player)
            if Settings.ESP.highlights[player] then
                Settings.ESP.highlights[player]:Destroy()
                Settings.ESP.highlights[player] = nil
            end
            if Settings.ESP.nametags[player] then
                Settings.ESP.nametags[player]:Destroy()
                Settings.ESP.nametags[player] = nil
            end
        end))
    end
end

-- Sistema de configuração CORRIGIDO
local function saveConfig()
    local configToSave = {
        Speed = {enabled = Settings.Speed.enabled, value = Settings.Speed.value},
        Jump = {enabled = Settings.Jump.enabled, value = Settings.Jump.value},
        FloatV1 = {enabled = Settings.FloatV1.enabled},
        FloatV2 = {enabled = Settings.FloatV2.enabled},
        ESP = {
            enabled = Settings.ESP.enabled, 
            color = {Settings.ESP.color.R * 255, Settings.ESP.color.G * 255, Settings.ESP.color.B * 255}
        },
        ESPBetter = {enabled = Settings.ESPBetter.enabled},
        AntiHit = {enabled = Settings.AntiHit.enabled}
    }
    
    local success, encoded = pcall(function()
        return HttpService:JSONEncode(configToSave)
    end)
    
    if success then
        writefile(CONFIG_FILE_NAME, encoded)
        return true
    end
    return false
end

local function loadConfig()
    if isfile(CONFIG_FILE_NAME) then
        local success, decoded = pcall(function()
            return HttpService:JSONDecode(readfile(CONFIG_FILE_NAME))
        end)
        
        if success and decoded then
            -- Aplicar configurações carregadas
            if decoded.Speed then
                Settings.Speed.enabled = decoded.Speed.enabled or false
                Settings.Speed.value = decoded.Speed.value or 50
            end
            if decoded.Jump then
                Settings.Jump.enabled = decoded.Jump.enabled or false
                Settings.Jump.value = decoded.Jump.value or 90
            end
            if decoded.FloatV1 then
                Settings.FloatV1.enabled = decoded.FloatV1.enabled or false
            end
            if decoded.FloatV2 then
                Settings.FloatV2.enabled = decoded.FloatV2.enabled or false
            end
            if decoded.ESP then
                Settings.ESP.enabled = decoded.ESP.enabled or false
                if decoded.ESP.color then
                    Settings.ESP.color = Color3.fromRGB(decoded.ESP.color[1], decoded.ESP.color[2], decoded.ESP.color[3])
                end
            end
            if decoded.ESPBetter then
                Settings.ESPBetter.enabled = decoded.ESPBetter.enabled or false
            end
            if decoded.AntiHit then
                Settings.AntiHit.enabled = decoded.AntiHit.enabled or false
            end
            
            -- Aplicar configurações carregadas
            if Settings.Speed.enabled then
                ConnectionManager:add("Speed", RunService.Heartbeat:Connect(function()
                    local char = LocalPlayer.Character
                    if not char then return end
                    local humanoid = Cache:get(char, "Humanoid")
                    local rootPart = Cache:get(char, "HumanoidRootPart")
                    if humanoid and rootPart and humanoid.MoveDirection.Magnitude > 0 then
                        local velocity = humanoid.MoveDirection * Settings.Speed.value
                        rootPart.Velocity = Vector3.new(velocity.X, rootPart.Velocity.Y, velocity.Z)
                    end
                end))
            end
            
            if Settings.FloatV1.enabled then setupFloatV1() end
            if Settings.FloatV2.enabled then setupFloatV2() end
            if Settings.ESP.enabled then setupESPPlayers() end
            if Settings.ESPBetter.enabled then setupESPBetter() end
            if Settings.AntiHit.enabled then setupAntiHit() end
            
            return true
        end
    end
    return false
end

local function resetConfig()
    -- Limpar todas as funções ativas
    ConnectionManager:cleanup()
    
    -- Limpar ESP Players
    for _, highlight in pairs(Settings.ESP.highlights) do
        if highlight and highlight.Parent then highlight:Destroy() end
    end
    for _, nametag in pairs(Settings.ESP.nametags) do
        if nametag and nametag.Parent then nametag:Destroy() end
    end
    
    -- Limpar ESP Better
    if currentESP then
        currentESP:Destroy()
        currentESP = nil
    end
    for _, hl in pairs(highlights) do 
        if hl and hl.Parent then hl:Destroy() end
    end
    highlights = {}
    
    -- Resetar configurações
    Settings = {
        Speed = {enabled = false, value = 50},
        Jump = {enabled = false, value = 90},
        FloatV1 = {enabled = false}, 
        FloatV2 = {enabled = false}, 
        ESP = {enabled = false, color = Color3.fromRGB(0, 162, 232), highlights = {}, nametags = {}},
        ESPBetter = {enabled = false},
        AntiHit = {enabled = false}
    }
    
    -- Reset estados
    StateManager:set("floatV1", false)
    StateManager:set("floatV2", false)
    StateManager:set("bestESP", false)
    StateManager:set("antiHit", false)
    
    -- Resetar Anti-Hit
    pcall(function()
        if setfflag then
            setfflag("WorldStepMax", "-1")
        end
    end)
    
    Cache:clear()
    
    -- Deletar arquivo de configuração
    if isfile(CONFIG_FILE_NAME) then
        delfile(CONFIG_FILE_NAME)
    end
    
    return true
end

-- Função para UI responsiva
local function getResponsiveSize()
    local viewport = Workspace.CurrentCamera.ViewportSize
    local mobile = isMobile()
    
    if mobile then
        local width = math.min(viewport.X * 0.70, 240)
        local height = math.min(viewport.Y * 0.55, 260)
        return {width = width, height = height}
    else
        local isSmallScreen = viewport.X < 800 or viewport.Y < 600
        return isSmallScreen 
            and {width = math.min(viewport.X * 0.9, 350), height = math.min(viewport.Y * 0.85, 480)}
            or {width = 450, height = 580}
    end
end

-- Float V1 - Direção da câmera
local function setupFloatV1()
    ConnectionManager:remove("FloatV1")
    StateManager:set("floatV1", Settings.FloatV1.enabled)
    
    if Settings.FloatV1.enabled then
        ConnectionManager:add("FloatV1", RunService.Heartbeat:Connect(function()
            if not StateManager:get("floatV1") then return end
            
            local char = LocalPlayer.Character
            if not char then return end
            
            local hrp = Cache:get(char, "HumanoidRootPart")
            local cam = Workspace.CurrentCamera
            
            if hrp and cam then
                hrp.Velocity = cam.CFrame.LookVector * 25
            end
        end))
    end
end

-- Float V2 - Float aprimorado
local function setupFloatV2()
    ConnectionManager:remove("FloatV2")
    StateManager:set("floatV2", Settings.FloatV2.enabled)
    
    if Settings.FloatV2.enabled then
        ConnectionManager:add("FloatV2", RunService.Heartbeat:Connect(function()
            if not StateManager:get("floatV2") then return end
            
            local char = LocalPlayer.Character
            if not char then return end
            
            local hrp = Cache:get(char, "HumanoidRootPart")
            local humanoid = Cache:get(char, "Humanoid")
            local cam = Workspace.CurrentCamera
            
            if hrp and cam and humanoid then
                local moveVector = humanoid.MoveDirection
                if moveVector.Magnitude > 0 then
                    hrp.Velocity = (cam.CFrame.LookVector * moveVector.Z + cam.CFrame.RightVector * moveVector.X) * 30
                else
                    hrp.Velocity = Vector3.new(0, 0, 0)
                end
            end
        end))
    end
end

-- Limpar GUI existente
local function cleanupExistingGUI()
    local existingGUI = PlayerGui:FindFirstChild("SharkHUBScriptGUI")
    if existingGUI then
        existingGUI:Destroy()
        task.wait(0.1)
    end
end

-- Criar Toggle com Slider TEMA SHARK
local function createToggleAndSlider(parent, toggleText, sliderText, min, max, defaultValue, toggleCallback, sliderCallback, currentEnabled, currentValue)
    local mobile = isMobile()
    local containerHeight = mobile and 55 or 95
    
    local container = Instance.new("Frame")
    container.Size = UDim2.new(1, 0, 0, containerHeight)
    container.BackgroundColor3 = Color3.fromRGB(15, 30, 45)
    container.BorderSizePixel = 0
    container.Parent = parent

    local containerCorner = Instance.new("UICorner")
    containerCorner.CornerRadius = UDim.new(0, 8)
    containerCorner.Parent = container

    local containerStroke = Instance.new("UIStroke")
    containerStroke.Color = Color3.fromRGB(0, 162, 232)
    containerStroke.Thickness = 1
    containerStroke.Transparency = 0.5
    containerStroke.Parent = container

    -- Efeito gradient oceânico
    local gradient = Instance.new("UIGradient")
    gradient.Color = ColorSequence.new{
        ColorSequenceKeypoint.new(0, Color3.fromRGB(15, 30, 45)),
        ColorSequenceKeypoint.new(1, Color3.fromRGB(0, 40, 70))
    }
    gradient.Rotation = 90
    gradient.Parent = container

    -- Toggle superior
    local toggle = Instance.new("Frame")
    toggle.Size = UDim2.new(1, -8, 0, mobile and 22 or 45)
    toggle.Position = UDim2.new(0, 4, 0, 2)
    toggle.BackgroundTransparency = 1
    toggle.Parent = container

    local toggleLabel = Instance.new("TextLabel")
    toggleLabel.Size = UDim2.new(0.45, 0, 1, 0)
    toggleLabel.BackgroundTransparency = 1
    toggleLabel.Text = toggleText
    toggleLabel.TextColor3 = Color3.fromRGB(176, 224, 230)
    toggleLabel.TextSize = mobile and 8 or 18
    toggleLabel.Font = Enum.Font.GothamBold
    toggleLabel.TextXAlignment = Enum.TextXAlignment.Left
    toggleLabel.TextWrapped = true
    toggleLabel.TextScaled = mobile
    toggleLabel.Parent = toggle

    local toggleButton = Instance.new("TextButton")
    toggleButton.Size = UDim2.new(0, mobile and 35 or 70, 0, mobile and 18 or 35)
    toggleButton.Position = UDim2.new(1, mobile and -38 or -75, 0, mobile and 2 or 5)
    toggleButton.BackgroundColor3 = currentEnabled and Color3.fromRGB(0, 162, 232) or Color3.fromRGB(70, 70, 110)
    toggleButton.Text = currentEnabled and "ON" or "OFF"
    toggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    toggleButton.TextSize = mobile and 7 or 14
    toggleButton.Font = Enum.Font.GothamBold
    toggleButton.BorderSizePixel = 0
    toggleButton.Parent = toggle

    local toggleCorner = Instance.new("UICorner")
    toggleCorner.CornerRadius = UDim.new(0, 9)
    toggleCorner.Parent = toggleButton

    local toggleGlow = Instance.new("UIStroke")
    toggleGlow.Color = currentEnabled and Color3.fromRGB(0, 162, 232) or Color3.fromRGB(70, 70, 110)
    toggleGlow.Thickness = 2
    toggleGlow.Transparency = 0.5
    toggleGlow.Parent = toggleButton

    -- Slider inferior
    local slider = Instance.new("Frame")
    slider.Size = UDim2.new(1, -8, 0, mobile and 12 or 30)
    slider.Position = UDim2.new(0, 4, 0, mobile and 27 or 55)
    slider.BackgroundTransparency = 1
    slider.Parent = container

    local sliderValue = currentValue or defaultValue
    
    local sliderLabel = Instance.new("TextLabel")
    sliderLabel.Size = UDim2.new(0.25, 0, 1, 0)
    sliderLabel.BackgroundTransparency = 1
    sliderLabel.Text = sliderText .. ": " .. tostring(sliderValue)
    sliderLabel.TextColor3 = Color3.fromRGB(0, 255, 255)
    sliderLabel.TextSize = mobile and 5 or 14
    sliderLabel.Font = Enum.Font.Gotham
    sliderLabel.TextXAlignment = Enum.TextXAlignment.Left
    sliderLabel.TextScaled = mobile
    sliderLabel.Parent = slider

    local sliderBar = Instance.new("Frame")
    sliderBar.Size = UDim2.new(0.70, 0, 0, mobile and 6 or 10)
    sliderBar.Position = UDim2.new(0.28, 0, 0, mobile and 3 or 10)
    sliderBar.BackgroundColor3 = Color3.fromRGB(20, 40, 60)
    sliderBar.BorderSizePixel = 0
    sliderBar.Parent = slider

    local sliderFill = Instance.new("Frame")
    sliderFill.Size = UDim2.new((sliderValue - min) / (max - min), 0, 1, 0)
    sliderFill.BackgroundColor3 = Color3.fromRGB(0, 162, 232)
    sliderFill.BorderSizePixel = 0
    sliderFill.Parent = sliderBar

    local sliderCorner = Instance.new("UICorner")
    sliderCorner.CornerRadius = UDim.new(0, 3)
    sliderCorner.Parent = sliderBar

    local sliderFillCorner = Instance.new("UICorner")
    sliderFillCorner.CornerRadius = UDim.new(0, 3)
    sliderFillCorner.Parent = sliderFill

    local sliderThumb = Instance.new("Frame")
    sliderThumb.Size = UDim2.new(0, mobile and 10 or 16, 0, mobile and 10 or 16)
    sliderThumb.Position = UDim2.new((sliderValue - min) / (max - min), -5, 0, -2)
    sliderThumb.BackgroundColor3 = Color3.fromRGB(0, 255, 255)
    sliderThumb.BorderSizePixel = 0
    sliderThumb.Parent = sliderBar

    local thumbCorner = Instance.new("UICorner")
    thumbCorner.CornerRadius = UDim.new(0, 8)
    thumbCorner.Parent = sliderThumb

    -- Efeito de brilho no thumb
    local thumbGlow = Instance.new("UIStroke")
    thumbGlow.Color = Color3.fromRGB(0, 255, 255)
    thumbGlow.Thickness = 1
    thumbGlow.Transparency = 0.5
    thumbGlow.Parent = sliderThumb

    local sliderButton = Instance.new("TextButton")
    sliderButton.Size = UDim2.new(1, 0, 1, 10)
    sliderButton.Position = UDim2.new(0, 0, 0, -5)
    sliderButton.BackgroundTransparency = 1
    sliderButton.Text = ""
    sliderButton.Parent = sliderBar

    -- Lógica do slider
    local dragging = false
    local isEnabled = currentEnabled or false

    local function updateSlider(position)
        local relativeX = math.clamp((position.X - sliderBar.AbsolutePosition.X) / sliderBar.AbsoluteSize.X, 0, 1)
        sliderValue = math.floor(min + (max - min) * relativeX)
        sliderFill.Size = UDim2.new(relativeX, 0, 1, 0)
        sliderThumb.Position = UDim2.new(relativeX, -5, 0, -2)
        sliderLabel.Text = sliderText .. ": " .. tostring(sliderValue)
        if sliderCallback then sliderCallback(sliderValue) end
    end

    -- Touch e mouse support
    sliderButton.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = true
            updateSlider(input.Position)
        end
    end)
    
    UserInputService.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = false
        end
    end)

    UserInputService.InputChanged:Connect(function(input)
        if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
            updateSlider(input.Position)
        end
    end)

    -- Lógica do toggle
    toggleButton.MouseButton1Click:Connect(function()
        isEnabled = not isEnabled
        local newColor = isEnabled and Color3.fromRGB(0, 162, 232) or Color3.fromRGB(70, 70, 110)
        
        TweenService:Create(toggleButton, TweenInfo.new(0.3, Enum.EasingStyle.Quart), {
            BackgroundColor3 = newColor
        }):Play()
        
        TweenService:Create(toggleGlow, TweenInfo.new(0.3, Enum.EasingStyle.Quart), {
            Color = newColor
        }):Play()
        
        toggleButton.Text = isEnabled and "ON" or "OFF"
        if toggleCallback then toggleCallback(isEnabled) end
    end)

    return container
end

-- Criar Toggle simples TEMA SHARK
local function createToggleOnly(parent, toggleText, toggleCallback, currentEnabled)
    local mobile = isMobile()
    
    local container = Instance.new("Frame")
    container.Size = UDim2.new(1, 0, 0, mobile and 26 or 60)
    container.BackgroundColor3 = Color3.fromRGB(15, 30, 45)
    container.BorderSizePixel = 0
    container.Parent = parent

    local containerCorner = Instance.new("UICorner")
    containerCorner.CornerRadius = UDim.new(0, 8)
    containerCorner.Parent = container

    local containerStroke = Instance.new("UIStroke")
    containerStroke.Color = Color3.fromRGB(0, 162, 232)
    containerStroke.Thickness = 1
    containerStroke.Transparency = 0.5
    containerStroke.Parent = container

    -- Efeito gradient oceânico
    local gradient = Instance.new("UIGradient")
    gradient.Color = ColorSequence.new{
        ColorSequenceKeypoint.new(0, Color3.fromRGB(15, 30, 45)),
        ColorSequenceKeypoint.new(1, Color3.fromRGB(0, 40, 70))
    }
    gradient.Rotation = 90
    gradient.Parent = container

    local toggle = Instance.new("Frame")
    toggle.Size = UDim2.new(1, -8, 0, mobile and 18 or 40)
    toggle.Position = UDim2.new(0, 4, 0, mobile and 4 or 10)
    toggle.BackgroundTransparency = 1
    toggle.Parent = container

    local toggleLabel = Instance.new("TextLabel")
    toggleLabel.Size = UDim2.new(0.45, 0, 1, 0)
    toggleLabel.BackgroundTransparency = 1
    toggleLabel.Text = toggleText
    toggleLabel.TextColor3 = Color3.fromRGB(176, 224, 230)
    toggleLabel.TextSize = mobile and 8 or 18
    toggleLabel.Font = Enum.Font.GothamBold
    toggleLabel.TextXAlignment = Enum.TextXAlignment.Left
    toggleLabel.TextWrapped = true
    toggleLabel.TextScaled = mobile
    toggleLabel.Parent = toggle

    local toggleButton = Instance.new("TextButton")
    toggleButton.Size = UDim2.new(0, mobile and 35 or 70, 0, mobile and 18 or 35)
    toggleButton.Position = UDim2.new(1, mobile and -38 or -75, 0, mobile and 0 or 2.5)
    toggleButton.BackgroundColor3 = currentEnabled and Color3.fromRGB(0, 162, 232) or Color3.fromRGB(70, 70, 110)
    toggleButton.Text = currentEnabled and "ON" or "OFF"
    toggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    toggleButton.TextSize = mobile and 7 or 14
    toggleButton.Font = Enum.Font.GothamBold
    toggleButton.BorderSizePixel = 0
    toggleButton.Parent = toggle

    local toggleCorner = Instance.new("UICorner")
    toggleCorner.CornerRadius = UDim.new(0, 9)
    toggleCorner.Parent = toggleButton

    local toggleGlow = Instance.new("UIStroke")
    toggleGlow.Color = currentEnabled and Color3.fromRGB(0, 162, 232) or Color3.fromRGB(70, 70, 110)
    toggleGlow.Thickness = 2
    toggleGlow.Transparency = 0.5
    toggleGlow.Parent = toggleButton

    local isEnabled = currentEnabled or false

    toggleButton.MouseButton1Click:Connect(function()
        isEnabled = not isEnabled
        local newColor = isEnabled and Color3.fromRGB(0, 162, 232) or Color3.fromRGB(70, 70, 110)
        
        TweenService:Create(toggleButton, TweenInfo.new(0.3, Enum.EasingStyle.Quart), {
            BackgroundColor3 = newColor
        }):Play()
        
        TweenService:Create(toggleGlow, TweenInfo.new(0.3, Enum.EasingStyle.Quart), {
            Color = newColor
        }):Play()
        
        toggleButton.Text = isEnabled and "ON" or "OFF"
        if toggleCallback then toggleCallback(isEnabled) end
    end)

    return container
end

-- Criar botão de cor TEMA SHARK
local function createColorButton(parent, colorData, callback)
    local mobile = isMobile()
    
    local button = Instance.new("TextButton")
    button.Size = UDim2.new(0, mobile and 58 or 110, 0, mobile and 18 or 35)
    button.BackgroundColor3 = colorData.color
    button.Text = colorData.name
    button.TextColor3 = Color3.fromRGB(255, 255, 255)
    button.TextSize = mobile and 5 or 12
    button.Font = Enum.Font.GothamBold
    button.BorderSizePixel = 0
    button.TextStrokeTransparency = 0
    button.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
    button.Parent = parent

    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 5)
    corner.Parent = button

    local stroke = Instance.new("UIStroke")
    stroke.Color = Color3.fromRGB(0, 255, 255)
    stroke.Thickness = 2
    stroke.Transparency = 1
    stroke.Parent = button

    button.MouseButton1Click:Connect(function()
        if callback then callback(colorData.color) end
        
        TweenService:Create(stroke, TweenInfo.new(0.3, Enum.EasingStyle.Quart), {
            Transparency = 0
        }):Play()
        
        task.spawn(function()
            task.wait(0.3)
            TweenService:Create(stroke, TweenInfo.new(0.3, Enum.EasingStyle.Quart), {
                Transparency = 1
            }):Play()
        end)
    end)

    return button
end

-- Sistema de Drag Universal
local function setupUniversalDrag(frame, dragTarget)
    local dragging = false
    local dragStart = nil
    local startPos = nil

    local function startDrag(input)
        dragging = true
        dragStart = input.Position
        startPos = frame.Position
    end

    local function updateDrag(input)
        if dragging then
            local delta = input.Position - dragStart
            local viewport = Workspace.CurrentCamera.ViewportSize
            local newPos = UDim2.new(
                0, math.clamp(startPos.X.Offset + delta.X, 0, viewport.X - frame.AbsoluteSize.X),
                0, math.clamp(startPos.Y.Offset + delta.Y, 0, viewport.Y - frame.AbsoluteSize.Y)
            )
            frame.Position = newPos
        end
    end

    local function stopDrag()
        dragging = false
    end

    -- Eventos do target
    dragTarget.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            startDrag(input)
        end
    end)

    dragTarget.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
            updateDrag(input)
        end
    end)

    dragTarget.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            stopDrag()
        end
    end)

    -- Eventos globais
    UserInputService.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
            updateDrag(input)
        end
    end)

    UserInputService.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            stopDrag()
        end
    end)
end

-- Sistema de Touch Scroll
local function setupTouchScroll(scrollFrame)
    if not isMobile() then return end
    
    local lastTouchPos = nil
    local touchScrolling = false
    
    scrollFrame.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.Touch then
            lastTouchPos = input.Position
            touchScrolling = true
        end
    end)
    
    scrollFrame.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.Touch and touchScrolling and lastTouchPos then
            local delta = input.Position - lastTouchPos
            local newCanvasPos = scrollFrame.CanvasPosition - Vector2.new(0, delta.Y)
            newCanvasPos = Vector2.new(0, math.clamp(newCanvasPos.Y, 0, math.max(0, scrollFrame.AbsoluteCanvasSize.Y - scrollFrame.AbsoluteSize.Y)))
            scrollFrame.CanvasPosition = newCanvasPos
            lastTouchPos = input.Position
        end
    end)
    
    scrollFrame.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.Touch then
            touchScrolling = false
            lastTouchPos = nil
        end
    end)
end

-- Função principal para criar UI TEMA SHARK
local function createUI()
    cleanupExistingGUI()

    local responsiveSize = getResponsiveSize()
    local mobile = isMobile()
    
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "SharkHUBScriptGUI"
    screenGui.ResetOnSpawn = false
    screenGui.Parent = PlayerGui

    -- Frame principal TEMA SHARK
    local mainFrame = Instance.new("Frame")
    mainFrame.Name = "MainFrame"
    mainFrame.Size = UDim2.new(0, responsiveSize.width, 0, responsiveSize.height)
    mainFrame.Position = UDim2.new(0.5, -responsiveSize.width/2, 0.5, -responsiveSize.height/2)
    mainFrame.BackgroundColor3 = Color3.fromRGB(10, 20, 35)
    mainFrame.BorderSizePixel = 0
    mainFrame.Active = true
    mainFrame.Parent = screenGui

    -- Decorações oceânicas
    local mainCorner = Instance.new("UICorner")
    mainCorner.CornerRadius = UDim.new(0, mobile and 8 or 20)
    mainCorner.Parent = mainFrame

    local mainStroke = Instance.new("UIStroke")
    mainStroke.Color = Color3.fromRGB(0, 162, 232)
    mainStroke.Thickness = mobile and 2 or 3
    mainStroke.Transparency = 0.2
    mainStroke.Parent = mainFrame

    -- Gradiente oceânico
    local mainGradient = Instance.new("UIGradient")
    mainGradient.Color = ColorSequence.new{
        ColorSequenceKeypoint.new(0, Color3.fromRGB(0, 40, 70)),
        ColorSequenceKeypoint.new(0.5, Color3.fromRGB(10, 20, 35)),
        ColorSequenceKeypoint.new(1, Color3.fromRGB(0, 10, 20))
    }
    mainGradient.Rotation = 90
    mainGradient.Parent = mainFrame

    -- Barra de título TEMA SHARK
    local titleBar = Instance.new("Frame")
    titleBar.Name = "TitleBar"
    titleBar.Size = UDim2.new(1, 0, 0, mobile and 22 or 60)
    titleBar.BackgroundColor3 = Color3.fromRGB(0, 60, 100)
    titleBar.BorderSizePixel = 0
    titleBar.Active = true
    titleBar.Parent = mainFrame

    local titleCorner = Instance.new("UICorner")
    titleCorner.CornerRadius = UDim.new(0, mobile and 8 or 20)
    titleCorner.Parent = titleBar

    local titleGradient = Instance.new("UIGradient")
    titleGradient.Color = ColorSequence.new{
        ColorSequenceKeypoint.new(0, Color3.fromRGB(0, 162, 232)),
        ColorSequenceKeypoint.new(0.5, Color3.fromRGB(0, 100, 148)),
        ColorSequenceKeypoint.new(1, Color3.fromRGB(0, 60, 100))
    }
    titleGradient.Rotation = 90
    titleGradient.Parent = titleBar

    -- Efeito de onda animada
    local waveEffect = Instance.new("Frame")
    waveEffect.Size = UDim2.new(1, 0, 0, 2)
    waveEffect.Position = UDim2.new(0, 0, 1, -2)
    waveEffect.BackgroundColor3 = Color3.fromRGB(0, 255, 255)
    waveEffect.BorderSizePixel = 0
    waveEffect.Parent = titleBar

    local titleLabel = Instance.new("TextLabel")
    titleLabel.Size = UDim2.new(1, mobile and -25 or -70, 1, 0)
    titleLabel.Position = UDim2.new(0, mobile and 5 or 20, 0, 0)
    titleLabel.BackgroundTransparency = 1
    titleLabel.Text = "🦈 SharkHUB 🦈"
    titleLabel.TextColor3 = Color3.fromRGB(0, 255, 255)
    titleLabel.TextSize = mobile and 9 or 24
    titleLabel.Font = Enum.Font.GothamBold
    titleLabel.TextXAlignment = Enum.TextXAlignment.Left
    titleLabel.TextScaled = mobile
    titleLabel.TextStrokeTransparency = 0.5
    titleLabel.TextStrokeColor3 = Color3.fromRGB(0, 40, 70)
    titleLabel.Parent = titleBar

    -- Botão fechar
    local closeBtn = Instance.new("TextButton")
    closeBtn.Size = UDim2.new(0, mobile and 18 or 40, 0, mobile and 18 or 40)
    closeBtn.Position = UDim2.new(1, mobile and -20 or -50, 0, mobile and 2 or 10)
    closeBtn.BackgroundColor3 = Color3.fromRGB(220, 20, 60)
    closeBtn.Text = "×"
    closeBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
    closeBtn.TextSize = mobile and 10 or 24
    closeBtn.Font = Enum.Font.GothamBold
    closeBtn.BorderSizePixel = 0
    closeBtn.Parent = titleBar

    local closeCorner = Instance.new("UICorner")
    closeCorner.CornerRadius = UDim.new(0, mobile and 9 or 20)
    closeCorner.Parent = closeBtn

    -- UI minimizada SHARK
    local minimizedFrame = Instance.new("Frame")
    minimizedFrame.Name = "MinimizedFrame"  
    minimizedFrame.Size = UDim2.new(0, mobile and 50 or 60, 0, mobile and 50 or 60)
    minimizedFrame.Position = UDim2.new(0, 20, 0, 20)
    minimizedFrame.BackgroundColor3 = Color3.fromRGB(0, 60, 100)
    minimizedFrame.Visible = false
    minimizedFrame.Active = true
    minimizedFrame.Parent = screenGui

    local miniCorner = Instance.new("UICorner")
    miniCorner.CornerRadius = UDim.new(0, mobile and 12 or 15)
    miniCorner.Parent = minimizedFrame

    local miniStroke = Instance.new("UIStroke")
    miniStroke.Color = Color3.fromRGB(0, 162, 232)
    miniStroke.Thickness = 3
    miniStroke.Parent = minimizedFrame

    local miniGradient = Instance.new("UIGradient")
    miniGradient.Color = ColorSequence.new{
        ColorSequenceKeypoint.new(0, Color3.fromRGB(0, 162, 232)),
        ColorSequenceKeypoint.new(1, Color3.fromRGB(0, 60, 100))
    }
    miniGradient.Rotation = 135
    miniGradient.Parent = minimizedFrame

    local miniLabel = Instance.new("TextLabel")
    miniLabel.Size = UDim2.new(1, 0, 1, 0)
    miniLabel.BackgroundTransparency = 1
    miniLabel.Text = "🦈"
    miniLabel.TextColor3 = Color3.fromRGB(0, 255, 255)
    miniLabel.TextSize = mobile and 24 or 28
    miniLabel.Font = Enum.Font.GothamBold
    miniLabel.Parent = minimizedFrame

    -- Setup drag
    setupUniversalDrag(mainFrame, titleBar)
    
    -- Drag para UI minimizada
    local miniDragging = false
    local miniClickStart = 0
    local miniClickThreshold = 0.3

    local function setupMinimizedInteraction()
        minimizedFrame.InputBegan:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
                miniClickStart = tick()
                miniDragging = false
            end
        end)

        minimizedFrame.InputEnded:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
                local clickDuration = tick() - miniClickStart
                
                if clickDuration < miniClickThreshold and not miniDragging then
                    minimizedFrame.Visible = false
                    mainFrame.Visible = true
                    
                    mainFrame.Size = UDim2.new(0, 0, 0, 0)
                    mainFrame.Position = UDim2.new(0.5, 0, 0.5, 0)
                    
                    local expandTween = TweenService:Create(mainFrame, TweenInfo.new(0.4, Enum.EasingStyle.Back, Enum.EasingDirection.Out), {
                        Size = UDim2.new(0, responsiveSize.width, 0, responsiveSize.height),
                        Position = UDim2.new(0.5, -responsiveSize.width/2, 0.5, -responsiveSize.height/2)
                    })
                    expandTween:Play()
                end
            end
        end)
    end

    setupMinimizedInteraction()
    setupUniversalDrag(minimizedFrame, minimizedFrame)

    -- Container principal com margem para scroll
    local containerTop = mobile and 40 or 130
    local container = Instance.new("Frame")
    container.Size = UDim2.new(1, -10, 1, -containerTop - 10)
    container.Position = UDim2.new(0, 5, 0, containerTop)
    container.BackgroundTransparency = 1
    container.Parent = mainFrame

    -- Sistema de abas SHARK
    local tabButtons = Instance.new("Frame")
    tabButtons.Size = UDim2.new(1, -10, 0, mobile and 18 or 45)
    tabButtons.Position = UDim2.new(0, 5, 0, mobile and 25 or 75)
    tabButtons.BackgroundTransparency = 1
    tabButtons.Parent = mainFrame

    local tabLayout = Instance.new("UIListLayout")
    tabLayout.FillDirection = Enum.FillDirection.Horizontal
    tabLayout.Padding = UDim.new(0, mobile and 2 or 15)
    tabLayout.Parent = tabButtons

    local function createTab(name, text)
        local tabBtn = Instance.new("TextButton")
        tabBtn.Size = UDim2.new(0, mobile and 70 or 120, 1, 0)
        tabBtn.BackgroundColor3 = Color3.fromRGB(0, 40, 70)
        tabBtn.BorderSizePixel = 0
        tabBtn.Text = text
        tabBtn.TextColor3 = Color3.fromRGB(176, 224, 230)
        tabBtn.Font = Enum.Font.GothamBold
        tabBtn.TextSize = mobile and 6 or 16
        tabBtn.TextScaled = mobile
        tabBtn.Parent = tabButtons

        local corner = Instance.new("UICorner")
        corner.CornerRadius = UDim.new(0, mobile and 4 or 10)
        corner.Parent = tabBtn

        local stroke = Instance.new("UIStroke")
        stroke.Color = Color3.fromRGB(0, 100, 148)
        stroke.Thickness = 1
        stroke.Transparency = 0.5
        stroke.Parent = tabBtn

        return tabBtn
    end

    local playerTab = createTab("Player", "⚡ Player")
    local helperTab = createTab("Helper", "🎯 Helper")  
    local configTab = createTab("Config", "⚙️ Config")

    -- Criar seções com scroll funcional
    local function createSection(name)
        local section = Instance.new("ScrollingFrame")
        section.Name = name .. "Section"
        section.Size = UDim2.new(1, 0, 1, 0)
        section.Position = UDim2.new(0, 0, 0, 0)
        section.BackgroundTransparency = 1
        section.BorderSizePixel = 0
        section.Visible = false
        section.ScrollBarThickness = mobile and 8 or 6
        section.ScrollBarImageColor3 = Color3.fromRGB(0, 162, 232)
        section.ScrollBarImageTransparency = 0.3
        section.ScrollingDirection = Enum.ScrollingDirection.Y
        section.ScrollingEnabled = true
        section.CanvasSize = UDim2.new(0, 0, 0, 0)
        section.AutomaticCanvasSize = Enum.AutomaticSize.Y
        section.ElasticBehavior = Enum.ElasticBehavior.Always
        section.Parent = container

        local layout = Instance.new("UIListLayout")
        layout.Padding = UDim.new(0, mobile and 4 or 15)
        layout.SortOrder = Enum.SortOrder.LayoutOrder
        layout.Parent = section

        local padding = Instance.new("UIPadding")
        padding.PaddingTop = UDim.new(0, mobile and 4 or 10)
        padding.PaddingBottom = UDim.new(0, mobile and 8 or 10)
        padding.PaddingLeft = UDim.new(0, 0)
        padding.PaddingRight = UDim.new(0, mobile and 8 or 5)
        padding.Parent = section

        setupTouchScroll(section)

        return section
    end

    local playerSection = createSection("Player")
    local helperSection = createSection("Helper")
    local configSection = createSection("Config")

    -- Mostrar primeira aba
    playerSection.Visible = true
    playerTab.BackgroundColor3 = Color3.fromRGB(0, 100, 148)

    -- Sistema de troca de abas
    local function switchTab(targetSection, targetBtn)
        playerSection.Visible = false
        helperSection.Visible = false
        configSection.Visible = false
        
        playerTab.BackgroundColor3 = Color3.fromRGB(0, 40, 70)
        helperTab.BackgroundColor3 = Color3.fromRGB(0, 40, 70)
        configTab.BackgroundColor3 = Color3.fromRGB(0, 40, 70)
        
        targetSection.Visible = true
        targetBtn.BackgroundColor3 = Color3.fromRGB(0, 100, 148)
        
        -- Reset scroll para o topo
        targetSection.CanvasPosition = Vector2.new(0, 0)
    end

    playerTab.MouseButton1Click:Connect(function() switchTab(playerSection, playerTab) end)
    helperTab.MouseButton1Click:Connect(function() switchTab(helperSection, helperTab) end)
    configTab.MouseButton1Click:Connect(function() switchTab(configSection, configTab) end)

    -- Controles da seção Player
    createToggleAndSlider(playerSection, "⚡ Speed Hack", "Speed", 16, 100, Settings.Speed.value,
        function(enabled)
            Settings.Speed.enabled = enabled
            ConnectionManager:remove("Speed")
            if enabled then
                ConnectionManager:add("Speed", RunService.Heartbeat:Connect(function()
                    local char = LocalPlayer.Character
                    if not char then return end
                    local humanoid = Cache:get(char, "Humanoid")
                    local rootPart = Cache:get(char, "HumanoidRootPart")
                    if humanoid and rootPart and humanoid.MoveDirection.Magnitude > 0 then
                        local velocity = humanoid.MoveDirection * Settings.Speed.value
                        rootPart.Velocity = Vector3.new(velocity.X, rootPart.Velocity.Y, velocity.Z)
                    end
                end))
            end
        end,
        function(value) Settings.Speed.value = value end,
        Settings.Speed.enabled,
        Settings.Speed.value
    )

    local canJump = true
    createToggleAndSlider(playerSection, "🚀 Jump Hack", "Jump Power", 50, 150, Settings.Jump.value,
        function(enabled)
            Settings.Jump.enabled = enabled
            ConnectionManager:remove("Jump")
            if enabled then
                ConnectionManager:add("Jump", UserInputService.JumpRequest:Connect(function()
                    if not canJump then return end
                    local char = LocalPlayer.Character
                    if not char then return end
                    local rootPart = Cache:get(char, "HumanoidRootPart")
                    if rootPart then
                        canJump = false
                        rootPart.Velocity = Vector3.new(rootPart.Velocity.X, Settings.Jump.value, rootPart.Velocity.Z)
                        task.spawn(function()
                            task.wait(1.5)
                            canJump = true
                        end)
                    end
                end))
            end
        end,
        function(value) Settings.Jump.value = value end,
        Settings.Jump.enabled,
        Settings.Jump.value
    )

    createToggleOnly(playerSection, "🌊 Float V1 (Wave Mode)",
        function(enabled)
            Settings.FloatV1.enabled = enabled
            setupFloatV1()
        end,
        Settings.FloatV1.enabled
    )

    createToggleOnly(playerSection, "💨 Float V2 (Current Mode)",
        function(enabled)
            Settings.FloatV2.enabled = enabled
            setupFloatV2()
        end,
        Settings.FloatV2.enabled
    )

    createToggleOnly(playerSection, "🛡️ Anti-Hit (Shark Shield)",
        function(enabled)
            Settings.AntiHit.enabled = enabled
            setupAntiHit()
        end,
        Settings.AntiHit.enabled
    )

    -- Controles da seção Helper
    createToggleOnly(helperSection, "🎯 ESP Best Target",
        function(enabled)
            Settings.ESPBetter.enabled = enabled
            setupESPBetter()
        end,
        Settings.ESPBetter.enabled
    )

    createToggleOnly(helperSection, "👁️ ESP Players",
        function(enabled)
            Settings.ESP.enabled = enabled
            setupESPPlayers()
        end,
        Settings.ESP.enabled
    )

    -- Seção de cores ESP
    local colorFrame = Instance.new("Frame")
    colorFrame.Size = UDim2.new(1, -4, 0, mobile and 78 or 200)
    colorFrame.BackgroundColor3 = Color3.fromRGB(15, 30, 45)
    colorFrame.BorderSizePixel = 0
    colorFrame.Parent = helperSection

    local colorFrameCorner = Instance.new("UICorner")
    colorFrameCorner.CornerRadius = UDim.new(0, 8)
    colorFrameCorner.Parent = colorFrame

    local colorStroke = Instance.new("UIStroke")
    colorStroke.Color = Color3.fromRGB(0, 162, 232)
    colorStroke.Thickness = 1
    colorStroke.Transparency = 0.5
    colorStroke.Parent = colorFrame

    local colorGradient = Instance.new("UIGradient")
    colorGradient.Color = ColorSequence.new{
        ColorSequenceKeypoint.new(0, Color3.fromRGB(15, 30, 45)),
        ColorSequenceKeypoint.new(1, Color3.fromRGB(0, 40, 70))
    }
    colorGradient.Rotation = 90
    colorGradient.Parent = colorFrame

    local colorTitle = Instance.new("TextLabel")
    colorTitle.Size = UDim2.new(1, -6, 0, mobile and 12 or 30)
    colorTitle.Position = UDim2.new(0, 3, 0, 3)
    colorTitle.BackgroundTransparency = 1
    colorTitle.Text = "🎨 ESP Ocean Colors"
    colorTitle.TextColor3 = Color3.fromRGB(0, 255, 255)
    colorTitle.TextSize = mobile and 8 or 18
    colorTitle.Font = Enum.Font.GothamBold
    colorTitle.TextXAlignment = Enum.TextXAlignment.Left
    colorTitle.TextScaled = mobile
    colorTitle.Parent = colorFrame

    local colorGrid = Instance.new("Frame")
    colorGrid.Size = UDim2.new(1, -8, 1, mobile and -16 or -40)
    colorGrid.Position = UDim2.new(0, 4, 0, mobile and 14 or 35)
    colorGrid.BackgroundTransparency = 1
    colorGrid.Parent = colorFrame

    local gridLayout = Instance.new("UIGridLayout")
    gridLayout.CellSize = UDim2.new(0, mobile and 58 or 110, 0, mobile and 18 or 35)
    gridLayout.CellPadding = UDim2.new(0, mobile and 1 or 5, 0, mobile and 1 or 5)
    gridLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
    gridLayout.VerticalAlignment = Enum.VerticalAlignment.Top
    gridLayout.Parent = colorGrid

    for _, colorData in ipairs(ColorPalette) do
        createColorButton(colorGrid, colorData, function(color)
            Settings.ESP.color = color
            if Settings.ESP.enabled then
                for player, highlight in pairs(Settings.ESP.highlights) do
                    if highlight and highlight.Parent then
                        highlight.FillColor = color
                        highlight.OutlineColor = color
                    end
                end
                for player, nametag in pairs(Settings.ESP.nametags) do
                    if nametag and nametag.Parent then
                        local nameLabel = nametag:FindFirstChild("TextLabel")
                        if nameLabel then
                            nameLabel.TextColor3 = color
                        end
                    end
                end
            end
        end)
    end

    -- Controles da seção Config CORRIGIDOS
    local configInfo = Instance.new("Frame")
    configInfo.Size = UDim2.new(1, 0, 0, mobile and 60 or 80)
    configInfo.BackgroundColor3 = Color3.fromRGB(15, 30, 45)
    configInfo.BorderSizePixel = 0
    configInfo.Parent = configSection

    local infoCorner = Instance.new("UICorner")
    infoCorner.CornerRadius = UDim.new(0, 8)
    infoCorner.Parent = configInfo

    local infoStroke = Instance.new("UIStroke")
    infoStroke.Color = Color3.fromRGB(0, 162, 232)
    infoStroke.Thickness = 1
    infoStroke.Transparency = 0.5
    infoStroke.Parent = configInfo

    local infoGradient = Instance.new("UIGradient")
    infoGradient.Color = ColorSequence.new{
        ColorSequenceKeypoint.new(0, Color3.fromRGB(15, 30, 45)),
        ColorSequenceKeypoint.new(1, Color3.fromRGB(0, 40, 70))
    }
    infoGradient.Rotation = 90
    infoGradient.Parent = configInfo

    local infoLabel = Instance.new("TextLabel")
    infoLabel.Size = UDim2.new(1, -10, 1, -10)
    infoLabel.Position = UDim2.new(0, 5, 0, 5)
    infoLabel.BackgroundTransparency = 1
    infoLabel.Text = "💾 Save your settings\n📂 Load previous settings\n🔄 Reset to default"
    infoLabel.TextColor3 = Color3.fromRGB(176, 224, 230)
    infoLabel.TextSize = mobile and 8 or 14
    infoLabel.Font = Enum.Font.Gotham
    infoLabel.TextWrapped = true
    infoLabel.TextScaled = mobile
    infoLabel.Parent = configInfo

    local configButtonsFrame = Instance.new("Frame")
    configButtonsFrame.Size = UDim2.new(1, 0, 0, mobile and 85 or 50)
    configButtonsFrame.BackgroundTransparency = 1
    configButtonsFrame.Parent = configSection

    local configLayout = Instance.new("UIListLayout")
    configLayout.FillDirection = mobile and Enum.FillDirection.Vertical or Enum.FillDirection.Horizontal
    configLayout.Padding = UDim.new(0, mobile and 4 or 20)
    configLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
    configLayout.Parent = configButtonsFrame

    local function createConfigButton(text, color, callback)
        local btn = Instance.new("TextButton")
        btn.Size = UDim2.new(0, mobile and 210 or 120, 0, mobile and 22 or 40)
        btn.BackgroundColor3 = color
        btn.Text = text
        btn.TextColor3 = Color3.fromRGB(255, 255, 255)
        btn.TextSize = mobile and 9 or 16
        btn.Font = Enum.Font.GothamBold
        btn.BorderSizePixel = 0
        btn.Parent = configButtonsFrame

        local corner = Instance.new("UICorner")
        corner.CornerRadius = UDim.new(0, 6)
        corner.Parent = btn

        local stroke = Instance.new("UIStroke")
        stroke.Color = color:Lerp(Color3.new(1, 1, 1), 0.3)
        stroke.Thickness = 2
        stroke.Transparency = 0.7
        stroke.Parent = btn

        -- Efeito hover/press
        btn.MouseEnter:Connect(function()
            TweenService:Create(btn, TweenInfo.new(0.2), {
                BackgroundColor3 = color:Lerp(Color3.new(1, 1, 1), 0.2)
            }):Play()
        end)

        btn.MouseLeave:Connect(function()
            TweenService:Create(btn, TweenInfo.new(0.2), {
                BackgroundColor3 = color
            }):Play()
        end)

        btn.MouseButton1Click:Connect(callback)
        return btn
    end

    local saveBtn = createConfigButton("💾 Save", Color3.fromRGB(34, 139, 34), function()
        task.spawn(function()
            local originalText = saveBtn.Text
            local success = saveConfig()
            saveBtn.Text = success and "✅ Saved!" or "❌ Error!"
            task.wait(2)
            saveBtn.Text = originalText
        end)
    end)

    local loadBtn = createConfigButton("📂 Load", Color3.fromRGB(0, 100, 148), function()
        task.spawn(function()
            local originalText = loadBtn.Text
            local success = loadConfig()
            loadBtn.Text = success and "✅ Loaded!" or "❌ No Config!"
            task.wait(2)
            loadBtn.Text = originalText
        end)
    end)

    local resetBtn = createConfigButton("🔄 Reset", Color3.fromRGB(220, 20, 60), function()
        task.spawn(function()
            local originalText = resetBtn.Text
            local success = resetConfig()
            resetBtn.Text = success and "✅ Reset!" or "❌ Error!"
            task.wait(2)
            resetBtn.Text = originalText
        end)
    end)

    -- Botão fechar com animação
    closeBtn.MouseButton1Click:Connect(function()
        local closeTween = TweenService:Create(mainFrame, TweenInfo.new(0.3, Enum.EasingStyle.Back, Enum.EasingDirection.In), {
            Size = UDim2.new(0, 0, 0, 0),
            Position = UDim2.new(0.5, 0, 0.5, 0)
        }):Play()
        
        task.wait(0.3)
        mainFrame.Visible = false
        minimizedFrame.Visible = true
        
        -- Animação da UI minimizada
        minimizedFrame.Size = UDim2.new(0, 0, 0, 0)
        TweenService:Create(minimizedFrame, TweenInfo.new(0.3, Enum.EasingStyle.Back, Enum.EasingDirection.Out), {
            Size = UDim2.new(0, mobile and 50 or 60, 0, mobile and 50 or 60)
        }):Play()
    end)
end

-- Cleanup completo
local function cleanup()
    ConnectionManager:cleanup()
    if currentESP then currentESP:Destroy() currentESP = nil end
    for _, hl in pairs(highlights) do if hl and hl.Parent then hl:Destroy() end end
    highlights = {}
    for _, highlight in pairs(Settings.ESP.highlights) do
        if highlight and highlight.Parent then highlight:Destroy() end
    end
    for _, nametag in pairs(Settings.ESP.nametags) do
        if nametag and nametag.Parent then nametag:Destroy() end
    end
    Settings.ESP.highlights = {}
    Settings.ESP.nametags = {}
    Cache:clear()
    StateManager:set("floatV1", false)
    StateManager:set("floatV2", false)
    StateManager:set("bestESP", false)
    StateManager:set("antiHit", false)
    
    pcall(function()
        if setfflag then
            setfflag("WorldStepMax", "-1")
        end
    end)
    
    cleanupExistingGUI()
end

-- Event cleanup
Players.PlayerRemoving:Connect(function(player)
    if player == LocalPlayer then cleanup() end
end)

LocalPlayer.CharacterAdded:Connect(function()
    if Settings.AntiHit.enabled then
        Settings.AntiHit.enabled = false
        StateManager:set("antiHit", false)
        pcall(function()
            if setfflag then
                setfflag("WorldStepMax", "-1")
            end
        end)
        print("⚠️ Anti-Hit desativado ao respawnar - Reative se necessário")
    end
end)

-- Inicializar
createUI()
print("🦈 SharkHUB Script carregado com sucesso!")
print("🌊 Versão Premium com tema oceânico e configurações funcionais")
