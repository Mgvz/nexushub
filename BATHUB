-- SharkHUB Premium V2 - Interface Ultra Moderna
-- COPIE ESTE CÓDIGO COMPLETO E EXECUTE NO SEU EXECUTOR

if not game:IsLoaded() then game.Loaded:Wait() end
task.wait(1)

local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")
local HttpService = game:GetService("HttpService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Lighting = game:GetService("Lighting")
local Workspace = workspace
local LocalPlayer = Players.LocalPlayer
local PlayerGui = LocalPlayer:WaitForChild("PlayerGui")

print("🦈 SharkHUB: Iniciando...")

local function isMobile()
    return UserInputService.TouchEnabled and not UserInputService.KeyboardEnabled
end

local ConnectionManager = {
    connections = {},
    add = function(self, name, connection)
        if self.connections[name] then
            pcall(function() self.connections[name]:Disconnect() end)
        end
        self.connections[name] = connection
    end,
    remove = function(self, name)
        if self.connections[name] then
            pcall(function() self.connections[name]:Disconnect() end)
            self.connections[name] = nil
        end
    end,
    cleanup = function(self)
        for _, connection in pairs(self.connections) do
            pcall(function() connection:Disconnect() end)
        end
        self.connections = {}
    end
}

local StateManager = {
    floatV1 = false,
    bestESP = false,
    antiHit = false,
    set = function(self, key, value) self[key] = value end,
    get = function(self, key) return self[key] end
}

local Cache = {
    instances = {},
    get = function(self, parent, name)
        if not parent then return nil end
        local key = tostring(parent) .. ":" .. name
        if not self.instances[key] then
            self.instances[key] = parent:FindFirstChild(name)
        end
        return self.instances[key]
    end,
    clear = function(self) self.instances = {} end
}

local NotificationSystem = {
    queue = {},
    showing = false,
    show = function(self, text, type)
        table.insert(self.queue, {text = text, type = type or "info"})
        if not self.showing then self:processQueue() end
    end,
    processQueue = function(self)
        if #self.queue == 0 then
            self.showing = false
            return
        end
        self.showing = true
        local data = table.remove(self.queue, 1)
        local mobile = isMobile()
        local gui = PlayerGui:FindFirstChild("SharkHUBScriptGUI")
        if not gui then self.showing = false return end
        
        local notif = Instance.new("Frame")
        notif.Size = UDim2.new(0, mobile and 200 or 300, 0, mobile and 40 or 60)
        notif.Position = UDim2.new(1, 20, 0, 100)
        notif.BackgroundColor3 = data.type == "success" and Color3.fromRGB(34, 139, 34) 
            or data.type == "error" and Color3.fromRGB(220, 20, 60) 
            or Color3.fromRGB(0, 162, 232)
        notif.BorderSizePixel = 0
        notif.Parent = gui
        
        local corner = Instance.new("UICorner")
        corner.CornerRadius = UDim.new(0, mobile and 8 or 12)
        corner.Parent = notif
        
        local shadow = Instance.new("UIStroke")
        shadow.Color = Color3.fromRGB(0, 0, 0)
        shadow.Thickness = mobile and 2 or 4
        shadow.Transparency = 0.8
        shadow.Parent = notif
        
        local label = Instance.new("TextLabel")
        label.Size = UDim2.new(1, -10, 1, 0)
        label.Position = UDim2.new(0, 5, 0, 0)
        label.BackgroundTransparency = 1
        label.Text = data.text
        label.TextColor3 = Color3.fromRGB(255, 255, 255)
        label.TextSize = mobile and 11 or 16
        label.Font = Enum.Font.GothamBold
        label.TextXAlignment = Enum.TextXAlignment.Left
        label.TextWrapped = true
        label.Parent = notif
        
        local targetPos = mobile and -210 or -320
        TweenService:Create(notif, TweenInfo.new(0.5, Enum.EasingStyle.Back), {
            Position = UDim2.new(1, targetPos, 0, 100)
        }):Play()
        
        task.wait(2.5)
        TweenService:Create(notif, TweenInfo.new(0.5, Enum.EasingStyle.Back, Enum.EasingDirection.In), {
            Position = UDim2.new(1, 20, 0, 100)
        }):Play()
        task.wait(0.5)
        pcall(function() notif:Destroy() end)
        self:processQueue()
    end
}

local Settings = {
    Speed = {enabled = false, value = 50},
    Jump = {enabled = false, value = 90},
    FloatV1 = {enabled = false}, 
    ESP = {enabled = false, color = Color3.fromRGB(0, 162, 232), highlights = {}, nametags = {}},
    ESPBetter = {enabled = false},
    AntiHit = {enabled = false},
    Theme = "Ocean"
}

local Themes = {
    Ocean = {
        primary = Color3.fromRGB(0, 162, 232),
        secondary = Color3.fromRGB(0, 100, 148),
        accent = Color3.fromRGB(0, 255, 255),
        background = Color3.fromRGB(10, 20, 35),
        surface = Color3.fromRGB(15, 30, 45)
    },
    Neon = {
        primary = Color3.fromRGB(255, 0, 128),
        secondary = Color3.fromRGB(128, 0, 255),
        accent = Color3.fromRGB(0, 255, 255),
        background = Color3.fromRGB(10, 10, 20),
        surface = Color3.fromRGB(20, 20, 30)
    },
    Forest = {
        primary = Color3.fromRGB(34, 139, 34),
        secondary = Color3.fromRGB(85, 107, 47),
        accent = Color3.fromRGB(144, 238, 144),
        background = Color3.fromRGB(20, 25, 20),
        surface = Color3.fromRGB(30, 35, 30)
    },
    Sunset = {
        primary = Color3.fromRGB(255, 94, 77),
        secondary = Color3.fromRGB(255, 154, 0),
        accent = Color3.fromRGB(255, 206, 84),
        background = Color3.fromRGB(25, 15, 20),
        surface = Color3.fromRGB(35, 25, 30)
    }
}

local CurrentTheme = Themes[Settings.Theme]

local ColorPalette = {
    {name = "Ocean", color = Color3.fromRGB(0, 162, 232)},
    {name = "Deep", color = Color3.fromRGB(0, 100, 148)},
    {name = "Aqua", color = Color3.fromRGB(0, 255, 255)},
    {name = "Coral", color = Color3.fromRGB(255, 127, 80)},
    {name = "Pearl", color = Color3.fromRGB(240, 240, 240)},
    {name = "Kelp", color = Color3.fromRGB(34, 139, 34)},
    {name = "Sand", color = Color3.fromRGB(238, 203, 173)},
    {name = "Storm", color = Color3.fromRGB(70, 70, 110)},
    {name = "Blood", color = Color3.fromRGB(220, 20, 60)},
    {name = "Night", color = Color3.fromRGB(25, 25, 112)},
    {name = "Foam", color = Color3.fromRGB(176, 224, 230)},
    {name = "Reef", color = Color3.fromRGB(127, 255, 212)}
}

local CONFIG_FILE_NAME = "SharkHUB_Config.json"
local currentESP = nil
local highlights = {}

local function parseValue(text)
    if not text or text == "" then return 0 end
    local multipliers = {Q = 1e15, T = 1e12, B = 1e9, M = 1e6, K = 1e3}
    local number, suffix = text:match("([%d%.]+)([QTBMK]?)")
    number = tonumber(number) or 0
    return multipliers[suffix] and number * multipliers[suffix] or number
end

local function setupESPBetter()
    ConnectionManager:remove("ESPBetter")
    StateManager:set("bestESP", Settings.ESPBetter.enabled)
    
    if currentESP then pcall(function() currentESP:Destroy() end) currentESP = nil end
    for _, hl in pairs(highlights) do pcall(function() if hl and hl.Parent then hl:Destroy() end end) end
    highlights = {}
    
    if Settings.ESPBetter.enabled then
        local lastUpdate, UPDATE_INTERVAL = 0, 0.2
        ConnectionManager:add("ESPBetter", RunService.Heartbeat:Connect(function()
            local currentTime = tick()
            if currentTime - lastUpdate < UPDATE_INTERVAL or not StateManager:get("bestESP") then return end
            lastUpdate = currentTime

            local bestAnimal, bestValue, bestBase = nil, -math.huge, nil
            if currentESP then pcall(function() currentESP:Destroy() end) currentESP = nil end
            for _, hl in pairs(highlights) do pcall(function() if hl and hl.Parent then hl:Destroy() end end) end
            highlights = {}

            local plots = Workspace:FindFirstChild("Plots")
            if not plots then return end

            for _, plot in ipairs(plots:GetChildren()) do
                pcall(function()
                    local plotSign = plot:FindFirstChild("PlotSign")
                    if plotSign then
                        local surfaceGui = plotSign:FindFirstChild("SurfaceGui")
                        local frame = surfaceGui and surfaceGui:FindFirstChild("Frame")
                        local textLabel = frame and frame:FindFirstChild("TextLabel")
                        
                        if textLabel and textLabel.Text ~= "Empty Base" and not textLabel.Text:find(LocalPlayer.DisplayName) then
                            local animalPodiums = plot:FindFirstChild("AnimalPodiums")
                            if animalPodiums then
                                for _, podium in ipairs(animalPodiums:GetChildren()) do
                                    local base = podium:FindFirstChild("Base")
                                    local spawn = base and base:FindFirstChild("Spawn")
                                    local attach = spawn and spawn:FindFirstChild("Attachment")
                                    
                                    if attach then
                                        local overhead = attach:FindFirstChild("AnimalOverhead")
                                        if overhead then
                                            local stolen = overhead:FindFirstChild("Stolen")
                                            if not (stolen and (stolen.Text == "FUSING" or stolen.Text == "IN MACHINE" or stolen.Text == "CRAFTING")) then
                                                local gen = overhead:FindFirstChild("Generation")
                                                local rarity = overhead:FindFirstChild("Rarity")
                                                local name = overhead:FindFirstChild("DisplayName")
                                                
                                                if gen and rarity and name then
                                                    local value = parseValue(gen.Text)
                                                    if value > bestValue then
                                                        bestValue = value
                                                        bestAnimal = {attachment = attach, nome = name.Text, raridade = rarity.Text, porSegundo = gen.Text}
                                                        bestBase = base
                                                    end
                                                end
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end)
            end

            if bestAnimal and bestAnimal.attachment then
                pcall(function()
                    local billboard = Instance.new("BillboardGui")
                    billboard.Name = "BestAnimalESP"
                    billboard.AlwaysOnTop = true
                    billboard.Size = UDim2.new(0.4, 0, 0.7, 0)
                    billboard.StudsOffset = Vector3.new(0, 3.5, 0)
                    billboard.Parent = bestAnimal.attachment
                    
                    local back = Instance.new("Frame")
                    back.BackgroundTransparency = 0.15
                    back.BackgroundColor3 = CurrentTheme.surface
                    back.Size = UDim2.new(1, 0, 1, 0)
                    back.Position = UDim2.new(0.5, 0, 0.5, 0)
                    back.AnchorPoint = Vector2.new(0.5, 0.5)
                    back.Parent = billboard
                    
                    local uicorner = Instance.new("UICorner")
                    uicorner.CornerRadius = UDim.new(0, 10)
                    uicorner.Parent = back
                    
                    local uistroke = Instance.new("UIStroke")
                    uistroke.Color = CurrentTheme.primary
                    uistroke.Thickness = 2
                    uistroke.Parent = back
                    
                    local textLabel = Instance.new("TextLabel")
                    textLabel.Size = UDim2.new(0.9, 0, 0.9, 0)
                    textLabel.Position = UDim2.new(0.05, 0, 0.05, 0)
                    textLabel.BackgroundTransparency = 1
                    textLabel.TextColor3 = CurrentTheme.accent
                    textLabel.TextScaled = true
                    textLabel.Font = Enum.Font.GothamBold
                    textLabel.Text = string.format("🎯 %s\n%s | %s", bestAnimal.nome, bestAnimal.raridade, bestAnimal.porSegundo)
                    textLabel.TextWrapped = true
                    textLabel.Parent = back
                    currentESP = billboard

                    if bestBase then
                        local decorations = bestBase:FindFirstChild("Decorations")
                        if decorations then
                            for _, d in ipairs(decorations:GetDescendants()) do
                                if d:IsA("BasePart") then
                                    pcall(function()
                                        local hl = Instance.new("Highlight")
                                        hl.Name = "ESP_Deco"
                                        hl.FillColor = CurrentTheme.primary
                                        hl.OutlineColor = CurrentTheme.secondary
                                        hl.FillTransparency = 0.5
                                        hl.OutlineTransparency = 0
                                        hl.Parent = d
                                        highlights[d] = hl
                                    end)
                                end
                            end
                        end
                    end
                end)
            end
        end))
        NotificationSystem:show("ESP Target ativado!", "success")
    else
        NotificationSystem:show("ESP Target desativado", "info")
    end
end

local function setupAntiHit()
    ConnectionManager:remove("AntiHit")
    StateManager:set("antiHit", Settings.AntiHit.enabled)
    
    if Settings.AntiHit.enabled then
        task.spawn(function()
            local success = pcall(function()
                local backpack = LocalPlayer:WaitForChild("Backpack", 5)
                if not backpack then NotificationSystem:show("Backpack não encontrado", "error") return end
                
                local character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
                local humanoid = character:WaitForChild("Humanoid", 5)
                if not humanoid then NotificationSystem:show("Humanoid não encontrado", "error") return end
                
                NotificationSystem:show("Iniciando Anti-Hit...", "info")
                
                local packages = ReplicatedStorage:WaitForChild("Packages", 5)
                if not packages then NotificationSystem:show("Packages não encontrado", "error") return end
                
                local netFolder = packages:WaitForChild("Net", 5)
                if not netFolder then NotificationSystem:show("Net folder não encontrado", "error") return end
                
                local useItemRemote = netFolder:WaitForChild("RE/UseItem", 5)
                local teleportRemote = netFolder:WaitForChild("RE/QuantumCloner/OnTeleport", 5)
                
                if not useItemRemote or not teleportRemote then NotificationSystem:show("Remotos não encontrados", "error") return end

                local toolNames = {"Quantum Cloner", "Brainrot", "brainrot"}
                local tool = nil
                for _, toolName in ipairs(toolNames) do
                    tool = backpack:FindFirstChild(toolName) or character:FindFirstChild(toolName)
                    if tool then break end
                end
                
                if not tool then
                    for _, item in ipairs(backpack:GetChildren()) do
                        if item:IsA("Tool") then tool = item break end
                    end
                end
                
                if tool and tool.Parent == backpack then
                    humanoid:EquipTool(tool)
                    task.wait(0.5)
                end

                if setfflag then setfflag("WorldStepMax", "-9999999999") end
                task.wait(0.2)
                useItemRemote:FireServer()
                task.wait(1)
                teleportRemote:FireServer()
                task.wait(2)
                if setfflag then setfflag("WorldStepMax", "-1") end
                NotificationSystem:show("Anti-Hit ativado!", "success")
            end)
            
            if not success then
                NotificationSystem:show("Erro no Anti-Hit", "error")
                Settings.AntiHit.enabled = false
                StateManager:set("antiHit", false)
            end
        end)
    else
        pcall(function() if setfflag then setfflag("WorldStepMax", "-1") end end)
        NotificationSystem:show("Anti-Hit desativado", "info")
    end
end

local function setupESPPlayers()
    ConnectionManager:remove("ESPPlayers")
    ConnectionManager:remove("ESPPlayersRemoving")
    
    for _, highlight in pairs(Settings.ESP.highlights) do
        pcall(function() if highlight and highlight.Parent then highlight:Destroy() end end)
    end
    for _, nametag in pairs(Settings.ESP.nametags) do
        pcall(function() if nametag and nametag.Parent then nametag:Destroy() end end)
    end
    Settings.ESP.highlights = {}
    Settings.ESP.nametags = {}
    
    if Settings.ESP.enabled then
        local function createPlayerESP(player)
            if player == LocalPlayer then return end
            local function addESP()
                pcall(function()
                    local character = player.Character
                    if not character then return end
                    local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
                    local humanoid = character:FindFirstChild("Humanoid")
                    if not (humanoidRootPart and humanoid) then return end
                    
                    local highlight = Instance.new("Highlight")
                    highlight.Name = "PlayerESP"
                    highlight.FillColor = Settings.ESP.color
                    highlight.OutlineColor = Settings.ESP.color
                    highlight.FillTransparency = 0.5
                    highlight.OutlineTransparency = 0
                    highlight.Parent = character
                    Settings.ESP.highlights[player] = highlight
                    
                    local billboard = Instance.new("BillboardGui")
                    billboard.Name = "PlayerNameTag"
                    billboard.AlwaysOnTop = true
                    billboard.Size = UDim2.new(0, 200, 0, 50)
                    billboard.StudsOffset = Vector3.new(0, 3, 0)
                    billboard.Parent = humanoidRootPart
                    
                    local nameLabel = Instance.new("TextLabel")
                    nameLabel.Size = UDim2.new(1, 0, 1, 0)
                    nameLabel.BackgroundTransparency = 1
                    nameLabel.Text = player.DisplayName
                    nameLabel.TextColor3 = Settings.ESP.color
                    nameLabel.TextSize = 18
                    nameLabel.Font = Enum.Font.GothamBold
                    nameLabel.TextStrokeTransparency = 0
                    nameLabel.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
                    nameLabel.Parent = billboard
                    Settings.ESP.nametags[player] = billboard
                end)
            end
            if player.Character then addESP() end
            player.CharacterAdded:Connect(addESP)
        end
        
        for _, player in ipairs(Players:GetPlayers()) do createPlayerESP(player) end
        ConnectionManager:add("ESPPlayers", Players.PlayerAdded:Connect(createPlayerESP))
        ConnectionManager:add("ESPPlayersRemoving", Players.PlayerRemoving:Connect(function(player)
            if Settings.ESP.highlights[player] then
                pcall(function() Settings.ESP.highlights[player]:Destroy() end)
                Settings.ESP.highlights[player] = nil
            end
            if Settings.ESP.nametags[player] then
                pcall(function() Settings.ESP.nametags[player]:Destroy() end)
                Settings.ESP.nametags[player] = nil
            end
        end))
        NotificationSystem:show("ESP Players ativado!", "success")
    else
        NotificationSystem:show("ESP Players desativado", "info")
    end
end

local function saveConfig()
    if not writefile then NotificationSystem:show("Executor não suporta salvar", "error") return false end
    local configToSave = {
        Speed = {enabled = Settings.Speed.enabled, value = Settings.Speed.value},
        Jump = {enabled = Settings.Jump.enabled, value = Settings.Jump.value},
        FloatV1 = {enabled = Settings.FloatV1.enabled},
        ESP = {enabled = Settings.ESP.enabled, color = {Settings.ESP.color.R * 255, Settings.ESP.color.G * 255, Settings.ESP.color.B * 255}},
        ESPBetter = {enabled = Settings.ESPBetter.enabled},
        AntiHit = {enabled = Settings.AntiHit.enabled},
        Theme = Settings.Theme
    }
    local success, encoded = pcall(function() return HttpService:JSONEncode(configToSave) end)
    if success then writefile(CONFIG_FILE_NAME, encoded) return true end
    return false
end

local function loadConfig()
    if not isfile or not readfile then return false end
    if isfile(CONFIG_FILE_NAME) then
        local success, decoded = pcall(function() return HttpService:JSONDecode(readfile(CONFIG_FILE_NAME)) end)
        if success and decoded then
            for key, value in pairs(decoded) do
                if Settings[key] and type(value) == "table" then
                    for subKey, subValue in pairs(value) do
                        if subKey == "color" and type(subValue) == "table" then
                            Settings[key][subKey] = Color3.fromRGB(subValue[1], subValue[2], subValue[3])
                        else
                            Settings[key][subKey] = subValue
                        end
                    end
                elseif key == "Theme" then
                    Settings.Theme = value
                    CurrentTheme = Themes[value] or Themes.Ocean
                end
            end
            return true
        end
    end
    return false
end

local function resetConfig()
    ConnectionManager:cleanup()
    for _, highlight in pairs(Settings.ESP.highlights) do pcall(function() if highlight and highlight.Parent then highlight:Destroy() end end) end
    for _, nametag in pairs(Settings.ESP.nametags) do pcall(function() if nametag and nametag.Parent then nametag:Destroy() end end) end
    if currentESP then pcall(function() currentESP:Destroy() end) currentESP = nil end
    for _, hl in pairs(highlights) do pcall(function() if hl and hl.Parent then hl:Destroy() end end) end
    highlights = {}
    
    Settings = {
        Speed = {enabled = false, value = 50},
        Jump = {enabled = false, value = 90},
        FloatV1 = {enabled = false}, 
        ESP = {enabled = false, color = Color3.fromRGB(0, 162, 232), highlights = {}, nametags = {}},
        ESPBetter = {enabled = false},
        AntiHit = {enabled = false},
        Theme = "Ocean"
    }
    
    StateManager:set("floatV1", false)
    StateManager:set("bestESP", false)
    StateManager:set("antiHit", false)
    pcall(function() if setfflag then setfflag("WorldStepMax", "-1") end end)
    Cache:clear()
    if isfile and delfile and isfile(CONFIG_FILE_NAME) then delfile(CONFIG_FILE_NAME) end
    return true
end

local function setupFloatV1()
    ConnectionManager:remove("FloatV1")
    StateManager:set("floatV1", Settings.FloatV1.enabled)
    if Settings.FloatV1.enabled then
        ConnectionManager:add("FloatV1", RunService.Heartbeat:Connect(function()
            if not StateManager:get("floatV1") then return end
            pcall(function()
                local char = LocalPlayer.Character
                if not char then return end
                local hrp = char:FindFirstChild("HumanoidRootPart")
                local cam = Workspace.CurrentCamera
                if hrp and cam then hrp.Velocity = cam.CFrame.LookVector * 25 end
            end)
        end))
        NotificationSystem:show("Float ativado!", "success")
    else
        NotificationSystem:show("Float desativado", "info")
    end
end

local function cleanupExistingGUI()
    local existingGUI = PlayerGui:FindFirstChild("SharkHUBScriptGUI")
    if existingGUI then existingGUI:Destroy() task.wait(0.1) end
end

local function createModernToggle(parent, icon, text, callback, currentState)
    local mobile = isMobile()
    local container = Instance.new("Frame")
    container.Size = UDim2.new(1, -10, 0, mobile and 50 or 70)
    container.BackgroundColor3 = CurrentTheme.surface
    container.BorderSizePixel = 0
    container.Parent = parent

    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 12)
    corner.Parent = container

    local gradient = Instance.new("UIGradient")
    gradient.Color = ColorSequence.new{ColorSequenceKeypoint.new(0, CurrentTheme.surface), ColorSequenceKeypoint.new(1, CurrentTheme.background)}
    gradient.Rotation = 90
    gradient.Parent = container

    local iconLabel = Instance.new("TextLabel")
    iconLabel.Size = UDim2.new(0, mobile and 30 or 40, 0, mobile and 30 or 40)
    iconLabel.Position = UDim2.new(0, 10, 0.5, 0)
    iconLabel.AnchorPoint = Vector2.new(0, 0.5)
    iconLabel.BackgroundColor3 = CurrentTheme.primary
    iconLabel.Text = icon
    iconLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    iconLabel.TextSize = mobile and 16 or 20
    iconLabel.Font = Enum.Font.GothamBold
    iconLabel.Parent = container

    local iconCorner = Instance.new("UICorner")
    iconCorner.CornerRadius = UDim.new(0, 8)
    iconCorner.Parent = iconLabel

    local textLabel = Instance.new("TextLabel")
    textLabel.Size = UDim2.new(0.5, 0, 1, 0)
    textLabel.Position = UDim2.new(0, mobile and 50 or 65, 0, 0)
    textLabel.BackgroundTransparency = 1
    textLabel.Text = text
    textLabel.TextColor3 = CurrentTheme.accent
    textLabel.TextSize = mobile and 12 or 16
    textLabel.Font = Enum.Font.GothamBold
    textLabel.TextXAlignment = Enum.TextXAlignment.Left
    textLabel.Parent = container

    local switchFrame = Instance.new("Frame")
    switchFrame.Size = UDim2.new(0, mobile and 50 or 60, 0, mobile and 25 or 30)
    switchFrame.Position = UDim2.new(1, mobile and -60 or -70, 0.5, 0)
    switchFrame.AnchorPoint = Vector2.new(0, 0.5)
    switchFrame.BackgroundColor3 = currentState and CurrentTheme.primary or Color3.fromRGB(60, 60, 60)
    switchFrame.BorderSizePixel = 0
    switchFrame.Parent = container

    local switchCorner = Instance.new("UICorner")
    switchCorner.CornerRadius = UDim.new(1, 0)
    switchCorner.Parent = switchFrame

    local switchBall = Instance.new("Frame")
    switchBall.Size = UDim2.new(0, mobile and 21 or 26, 0, mobile and 21 or 26)
    switchBall.Position = currentState and UDim2.new(1, -23, 0.5, 0) or UDim2.new(0, 2, 0.5, 0)
    switchBall.AnchorPoint = Vector2.new(0, 0.5)
    switchBall.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    switchBall.BorderSizePixel = 0
    switchBall.Parent = switchFrame

    local ballCorner = Instance.new("UICorner")
    ballCorner.CornerRadius = UDim.new(1, 0)
    ballCorner.Parent = switchBall

    local ballShadow = Instance.new("UIStroke")
    ballShadow.Color = Color3.fromRGB(0, 0, 0)
    ballShadow.Thickness = 2
    ballShadow.Transparency = 0.8
    ballShadow.Parent = switchBall

    local switchButton = Instance.new("TextButton")
    switchButton.Size = UDim2.new(1, 0, 1, 0)
    switchButton.BackgroundTransparency = 1
    switchButton.Text = ""
    switchButton.Parent = switchFrame

    local isEnabled = currentState or false

    switchButton.MouseButton1Click:Connect(function()
        isEnabled = not isEnabled
        TweenService:Create(switchFrame, TweenInfo.new(0.3, Enum.EasingStyle.Quart), {BackgroundColor3 = isEnabled and CurrentTheme.primary or Color3.fromRGB(60, 60, 60)}):Play()
        TweenService:Create(switchBall, TweenInfo.new(0.3, Enum.EasingStyle.Quart), {Position = isEnabled and UDim2.new(1, mobile and -23 or -28, 0.5, 0) or UDim2.new(0, 2, 0.5, 0)}):Play()
        TweenService:Create(iconLabel, TweenInfo.new(0.2, Enum.EasingStyle.Back), {Size = UDim2.new(0, mobile and 35 or 45, 0, mobile and 35 or 45)}):Play()
        task.wait(0.2)
        TweenService:Create(iconLabel, TweenInfo.new(0.2, Enum.EasingStyle.Back), {Size = UDim2.new(0, mobile and 30 or 40, 0, mobile and 30 or 40)}):Play()
        if callback then callback(isEnabled) end
    end)
    return container
end

local function createModernSlider(parent, icon, text, min, max, default, callback, current)
    local mobile = isMobile()
    local container = Instance.new("Frame")
    container.Size = UDim2.new(1, -10, 0, mobile and 80 or 100)
    container.BackgroundColor3 = CurrentTheme.surface
    container.BorderSizePixel = 0
    container.Parent = parent

    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 12)
    corner.Parent = container

    local gradient = Instance.new("UIGradient")
    gradient.Color = ColorSequence.new{ColorSequenceKeypoint.new(0, CurrentTheme.surface), ColorSequenceKeypoint.new(1, CurrentTheme.background)}
    gradient.Rotation = 90
    gradient.Parent = container

    local header = Instance.new("Frame")
    header.Size = UDim2.new(1, 0, 0, mobile and 40 or 50)
    header.BackgroundTransparency = 1
    header.Parent = container

    local iconLabel = Instance.new("TextLabel")
    iconLabel.Size = UDim2.new(0, mobile and 25 or 35, 0, mobile and 25 or 35)
    iconLabel.Position = UDim2.new(0, 10, 0.5, 0)
    iconLabel.AnchorPoint = Vector2.new(0, 0.5)
    iconLabel.BackgroundColor3 = CurrentTheme.primary
    iconLabel.Text = icon
    iconLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    iconLabel.TextSize = mobile and 14 or 18
    iconLabel.Font = Enum.Font.GothamBold
    iconLabel.Parent = header

    local iconCorner = Instance.new("UICorner")
    iconCorner.CornerRadius = UDim.new(0, 6)
    iconCorner.Parent = iconLabel

    local textLabel = Instance.new("TextLabel")
    textLabel.Size = UDim2.new(0.5, 0, 1, 0)
    textLabel.Position = UDim2.new(0, mobile and 45 or 55, 0, 0)
    textLabel.BackgroundTransparency = 1
    textLabel.Text = text
    textLabel.TextColor3 = CurrentTheme.accent
    textLabel.TextSize = mobile and 11 or 15
    textLabel.Font = Enum.Font.GothamBold
    textLabel.TextXAlignment = Enum.TextXAlignment.Left
    textLabel.Parent = header

    local currentValue = current or default
    local valueLabel = Instance.new("TextLabel")
    valueLabel.Size = UDim2.new(0, 60, 1, 0)
    valueLabel.Position = UDim2.new(1, -70, 0, 0)
    valueLabel.BackgroundTransparency = 1
    valueLabel.Text = tostring(currentValue)
    valueLabel.TextColor3 = CurrentTheme.primary
    valueLabel.TextSize = mobile and 14 or 18
    valueLabel.Font = Enum.Font.GothamBold
    valueLabel.TextXAlignment = Enum.TextXAlignment.Right
    valueLabel.Parent = header

    local sliderFrame = Instance.new("Frame")
    sliderFrame.Size = UDim2.new(1, -20, 0, mobile and 8 or 10)
    sliderFrame.Position = UDim2.new(0, 10, 1, mobile and -20 or -25)
    sliderFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    sliderFrame.BorderSizePixel = 0
    sliderFrame.Parent = container

    local sliderCorner = Instance.new("UICorner")
    sliderCorner.CornerRadius = UDim.new(1, 0)
    sliderCorner.Parent = sliderFrame

    local sliderFill = Instance.new("Frame")
    sliderFill.Size = UDim2.new((currentValue - min) / (max - min), 0, 1, 0)
    sliderFill.BackgroundColor3 = CurrentTheme.primary
    sliderFill.BorderSizePixel = 0
    sliderFill.Parent = sliderFrame

    local fillCorner = Instance.new("UICorner")
    fillCorner.CornerRadius = UDim.new(1, 0)
    fillCorner.Parent = sliderFill

    local fillGradient = Instance.new("UIGradient")
    fillGradient.Color = ColorSequence.new{ColorSequenceKeypoint.new(0, CurrentTheme.primary), ColorSequenceKeypoint.new(1, CurrentTheme.accent)}
    fillGradient.Parent = sliderFill

    local sliderThumb = Instance.new("Frame")
    sliderThumb.Size = UDim2.new(0, mobile and 16 or 20, 0, mobile and 16 or 20)
    sliderThumb.Position = UDim2.new((currentValue - min) / (max - min), -10, 0.5, 0)
    sliderThumb.AnchorPoint = Vector2.new(0, 0.5)
    sliderThumb.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    sliderThumb.BorderSizePixel = 0
    sliderThumb.Parent = sliderFrame

    local thumbCorner = Instance.new("UICorner")
    thumbCorner.CornerRadius = UDim.new(1, 0)
    thumbCorner.Parent = sliderThumb

    local thumbShadow = Instance.new("UIStroke")
    thumbShadow.Color = CurrentTheme.primary
    thumbShadow.Thickness = 2
    thumbShadow.Parent = sliderThumb

    local sliderButton = Instance.new("TextButton")
    sliderButton.Size = UDim2.new(1, 0, 1, 20)
    sliderButton.Position = UDim2.new(0, 0, 0, -10)
    sliderButton.BackgroundTransparency = 1
    sliderButton.Text = ""
    sliderButton.Parent = sliderFrame

    local dragging = false
    local function updateSlider(position)
        local relativeX = math.clamp((position.X - sliderFrame.AbsolutePosition.X) / sliderFrame.AbsoluteSize.X, 0, 1)
        currentValue = math.floor(min + (max - min) * relativeX)
        sliderFill.Size = UDim2.new(relativeX, 0, 1, 0)
        sliderThumb.Position = UDim2.new(relativeX, -10, 0.5, 0)
        valueLabel.Text = tostring(currentValue)
        if callback then callback(currentValue) end
    end

    sliderButton.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = true
            updateSlider(input.Position)
            TweenService:Create(sliderThumb, TweenInfo.new(0.1), {Size = UDim2.new(0, mobile and 20 or 24, 0, mobile and 20 or 24)}):Play()
        end
    end)
    
    UserInputService.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = false
            TweenService:Create(sliderThumb, TweenInfo.new(0.1), {Size = UDim2.new(0, mobile and 16 or 20, 0, mobile and 16 or 20)}):Play()
        end
    end)

    UserInputService.InputChanged:Connect(function(input)
        if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
            updateSlider(input.Position)
        end
    end)
    return container
end

local function setupDrag(frame, handle)
    local dragging, dragStart, startPos = false, nil, nil
    handle.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = true
            dragStart = input.Position
            startPos = frame.Position
        end
    end)
    UserInputService.InputChanged:Connect(function(input)
        if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
            local delta = input.Position - dragStart
            frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
        end
    end)
    UserInputService.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = false
        end
    end)
end

local function createUI()
    print("🦈 SharkHUB: Criando UI...")
    cleanupExistingGUI()
    local mobile = isMobile()
    
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "SharkHUBScriptGUI"
    screenGui.ResetOnSpawn = false
    screenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    screenGui.Parent = PlayerGui

    local blur = Instance.new("BlurEffect")
    blur.Size = 0
    blur.Parent = Lighting

    local mainFrame = Instance.new("Frame")
    mainFrame.Name = "MainFrame"
    mainFrame.Size = UDim2.new(0, mobile and 280 or 500, 0, mobile and 400 or 600)
    mainFrame.Position = UDim2.new(0.5, 0, 0.5, 0)
    mainFrame.AnchorPoint = Vector2.new(0.5, 0.5)
    mainFrame.BackgroundColor3 = CurrentTheme.background
    mainFrame.BorderSizePixel = 0
    mainFrame.Parent = screenGui

    local mainCorner = Instance.new("UICorner")
    mainCorner.CornerRadius = UDim.new(0, 20)
    mainCorner.Parent = mainFrame

    local mainShadow = Instance.new("UIStroke")
    mainShadow.Color = Color3.fromRGB(0, 0, 0)
    mainShadow.Thickness = 4
    mainShadow.Transparency = 0.7
    mainShadow.Parent = mainFrame

    mainFrame.Size = UDim2.new(0, 0, 0, 0)
    TweenService:Create(blur, TweenInfo.new(0.5), {Size = 10}):Play()
    TweenService:Create(mainFrame, TweenInfo.new(0.5, Enum.EasingStyle.Back), {Size = UDim2.new(0, mobile and 280 or 500, 0, mobile and 400 or 600)}):Play()

    local header = Instance.new("Frame")
    header.Size = UDim2.new(1, 0, 0, mobile and 60 or 80)
    header.BackgroundColor3 = CurrentTheme.primary
    header.BorderSizePixel = 0
    header.Parent = mainFrame

    local headerCorner = Instance.new("UICorner")
    headerCorner.CornerRadius = UDim.new(0, 20)
    headerCorner.Parent = header

    local headerFix = Instance.new("Frame")
    headerFix.Size = UDim2.new(1, 0, 0, 20)
    headerFix.Position = UDim2.new(0, 0, 1, -20)
    headerFix.BackgroundColor3 = CurrentTheme.primary
    headerFix.BorderSizePixel = 0
    headerFix.Parent = header

    local headerGradient = Instance.new("UIGradient")
    headerGradient.Color = ColorSequence.new{ColorSequenceKeypoint.new(0, CurrentTheme.primary), ColorSequenceKeypoint.new(1, CurrentTheme.secondary)}
    headerGradient.Rotation = 90
    headerGradient.Parent = header

    local title = Instance.new("TextLabel")
    title.Size = UDim2.new(1, -80, 1, 0)
    title.Position = UDim2.new(0, 20, 0, 0)
    title.BackgroundTransparency = 1
    title.Text = "🦈 SHARK HUB"
    title.TextColor3 = Color3.fromRGB(255, 255, 255)
    title.TextSize = mobile and 20 or 28
    title.Font = Enum.Font.GothamBold
    title.TextXAlignment = Enum.TextXAlignment.Left
    title.Parent = header

    local subtitle = Instance.new("TextLabel")
    subtitle.Size = UDim2.new(1, -80, 0, 20)
    subtitle.Position = UDim2.new(0, 20, 1, -25)
    subtitle.BackgroundTransparency = 1
    subtitle.Text = "Premium Edition v2.0"
    subtitle.TextColor3 = CurrentTheme.accent
    subtitle.TextSize = mobile and 10 or 12
    subtitle.Font = Enum.Font.Gotham
    subtitle.TextXAlignment = Enum.TextXAlignment.Left
    subtitle.Parent = header

    local minimizeBtn = Instance.new("TextButton")
    minimizeBtn.Size = UDim2.new(0, 30, 0, 30)
    minimizeBtn.Position = UDim2.new(1, -70, 0.5, 0)
    minimizeBtn.AnchorPoint = Vector2.new(0, 0.5)
    minimizeBtn.BackgroundColor3 = Color3.fromRGB(255, 200, 0)
    minimizeBtn.Text = "—"
    minimizeBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
    minimizeBtn.TextSize = 20
    minimizeBtn.Font = Enum.Font.GothamBold
    minimizeBtn.BorderSizePixel = 0
    minimizeBtn.Parent = header

    local minCorner = Instance.new("UICorner")
    minCorner.CornerRadius = UDim.new(0, 8)
    minCorner.Parent = minimizeBtn

    local closeBtn = Instance.new("TextButton")
    closeBtn.Size = UDim2.new(0, 30, 0, 30)
    closeBtn.Position = UDim2.new(1, -35, 0.5, 0)
    closeBtn.AnchorPoint = Vector2.new(0, 0.5)
    closeBtn.BackgroundColor3 = Color3.fromRGB(255, 60, 60)
    closeBtn.Text = "×"
    closeBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
    closeBtn.TextSize = 24
    closeBtn.Font = Enum.Font.GothamBold
    closeBtn.BorderSizePixel = 0
    closeBtn.Parent = header

    local closeCorner = Instance.new("UICorner")
    closeCorner.CornerRadius = UDim.new(0, 8)
    closeCorner.Parent = closeBtn

    local tabContainer = Instance.new("Frame")
    tabContainer.Size = UDim2.new(1, -20, 0, mobile and 35 or 45)
    tabContainer.Position = UDim2.new(0, 10, 0, mobile and 70 or 90)
    tabContainer.BackgroundTransparency = 1
    tabContainer.Parent = mainFrame

    local tabLayout = Instance.new("UIListLayout")
    tabLayout.FillDirection = Enum.FillDirection.Horizontal
    tabLayout.Padding = UDim.new(0, 5)
    tabLayout.Parent = tabContainer

    local sections = {}
    local tabs = {}

    local function createTab(name, icon)
        local tab = Instance.new("TextButton")
        tab.Size = UDim2.new(0.333, -5, 1, 0)
        tab.BackgroundColor3 = CurrentTheme.surface
        tab.Text = icon .. " " .. name
        tab.TextColor3 = CurrentTheme.accent
        tab.TextSize = mobile and 12 or 16
        tab.Font = Enum.Font.GothamBold
        tab.BorderSizePixel = 0
        tab.Parent = tabContainer

        local tabCorner = Instance.new("UICorner")
        tabCorner.CornerRadius = UDim.new(0, 10)
        tabCorner.Parent = tab

        local tabStroke = Instance.new("UIStroke")
        tabStroke.Color = CurrentTheme.primary
        tabStroke.Thickness = 0
        tabStroke.Transparency = 0.5
        tabStroke.Parent = tab

        tabs[name] = {button = tab, stroke = tabStroke}
        return tab
    end

    local playerTab = createTab("Player", "⚡")
    local visualTab = createTab("Visual", "👁")
    local configTab = createTab("Config", "⚙")

    local content = Instance.new("Frame")
    content.Size = UDim2.new(1, -20, 1, mobile and -120 or -150)
    content.Position = UDim2.new(0, 10, 0, mobile and 110 or 140)
    content.BackgroundTransparency = 1
    content.Parent = mainFrame

    local function createSection(name)
        local section = Instance.new("ScrollingFrame")
        section.Name = name
        section.Size = UDim2.new(1, 0, 1, 0)
        section.BackgroundTransparency = 1
        section.BorderSizePixel = 0
        section.ScrollBarThickness = 4
        section.ScrollBarImageColor3 = CurrentTheme.primary
        section.ScrollBarImageTransparency = 0.5
        section.CanvasSize = UDim2.new(0, 0, 0, 0)
        section.AutomaticCanvasSize = Enum.AutomaticSize.Y
        section.Visible = false
        section.Parent = content

        local sectionLayout = Instance.new("UIListLayout")
        sectionLayout.Padding = UDim.new(0, 10)
        sectionLayout.Parent = section

        sections[name] = section
        return section
    end

    local playerSection = createSection("Player")
    local visualSection = createSection("Visual")
    local configSection = createSection("Config")

    local currentTab = "Player"
    local function switchTab(name)
        for tabName, tabData in pairs(tabs) do
            if tabName == name then
                sections[tabName].Visible = true
                tabData.stroke.Thickness = 2
                TweenService:Create(tabData.button, TweenInfo.new(0.3), {BackgroundColor3 = CurrentTheme.primary}):Play()
            else
                sections[tabName].Visible = false
                tabData.stroke.Thickness = 0
                TweenService:Create(tabData.button, TweenInfo.new(0.3), {BackgroundColor3 = CurrentTheme.surface}):Play()
            end
        end
        currentTab = name
    end

    playerTab.MouseButton1Click:Connect(function() switchTab("Player") end)
    visualTab.MouseButton1Click:Connect(function() switchTab("Visual") end)
    configTab.MouseButton1Click:Connect(function() switchTab("Config") end)
    switchTab("Player")

    createModernSlider(playerSection, "⚡", "Speed Boost", 16, 100, Settings.Speed.value, function(value) Settings.Speed.value = value end, Settings.Speed.value)

    createModernToggle(playerSection, "🏃", "Enable Speed", function(enabled)
        Settings.Speed.enabled = enabled
        ConnectionManager:remove("Speed")
        if enabled then
            ConnectionManager:add("Speed", RunService.Heartbeat:Connect(function()
                pcall(function()
                    local char = LocalPlayer.Character
                    if not char then return end
                    local humanoid = char:FindFirstChild("Humanoid")
                    local rootPart = char:FindFirstChild("HumanoidRootPart")
                    if humanoid and rootPart and humanoid.MoveDirection.Magnitude > 0 then
                        local velocity = humanoid.MoveDirection * Settings.Speed.value
                        rootPart.Velocity = Vector3.new(velocity.X, rootPart.Velocity.Y, velocity.Z)
                    end
                end)
            end))
            NotificationSystem:show("Speed ativado!", "success")
        else
            NotificationSystem:show("Speed desativado", "info")
        end
    end, Settings.Speed.enabled)

    createModernSlider(playerSection, "🚀", "Jump Power", 50, 200, Settings.Jump.value, function(value) Settings.Jump.value = value end, Settings.Jump.value)

    local canJump = true
    createModernToggle(playerSection, "🦘", "Enable Jump", function(enabled)
        Settings.Jump.enabled = enabled
        ConnectionManager:remove("Jump")
        if enabled then
            ConnectionManager:add("Jump", UserInputService.JumpRequest:Connect(function()
                if not canJump then return end
                pcall(function()
                    local char = LocalPlayer.Character
                    if not char then return end
                    local rootPart = char:FindFirstChild("HumanoidRootPart")
                    if rootPart then
                        canJump = false
                        rootPart.Velocity = Vector3.new(rootPart.Velocity.X, Settings.Jump.value, rootPart.Velocity.Z)
                        task.spawn(function()
                            task.wait(1.5)
                            canJump = true
                        end)
                    end
                end)
            end))
            NotificationSystem:show("Jump ativado!", "success")
        else
            NotificationSystem:show("Jump desativado", "info")
        end
    end, Settings.Jump.enabled)

    createModernToggle(playerSection, "🌊", "Float Mode", function(enabled)
        Settings.FloatV1.enabled = enabled
        setupFloatV1()
    end, Settings.FloatV1.enabled)

    createModernToggle(playerSection, "🛡", "Anti-Hit Shield", function(enabled)
        Settings.AntiHit.enabled = enabled
        setupAntiHit()
    end, Settings.AntiHit.enabled)

    createModernToggle(visualSection, "🎯", "ESP Best Target", function(enabled)
        Settings.ESPBetter.enabled = enabled
        setupESPBetter()
    end, Settings.ESPBetter.enabled)

    createModernToggle(visualSection, "👥", "ESP Players", function(enabled)
        Settings.ESP.enabled = enabled
        setupESPPlayers()
    end, Settings.ESP.enabled)

    local colorFrame = Instance.new("Frame")
    colorFrame.Size = UDim2.new(1, -10, 0, 150)
    colorFrame.BackgroundColor3 = CurrentTheme.surface
    colorFrame.BorderSizePixel = 0
    colorFrame.Parent = visualSection

    local colorCorner = Instance.new("UICorner")
    colorCorner.CornerRadius = UDim.new(0, 12)
    colorCorner.Parent = colorFrame

    local colorTitle = Instance.new("TextLabel")
    colorTitle.Size = UDim2.new(1, -10, 0, 30)
    colorTitle.Position = UDim2.new(0, 5, 0, 5)
    colorTitle.BackgroundTransparency = 1
    colorTitle.Text = "🎨 ESP Colors"
    colorTitle.TextColor3 = CurrentTheme.accent
    colorTitle.TextSize = 16
    colorTitle.Font = Enum.Font.GothamBold
    colorTitle.TextXAlignment = Enum.TextXAlignment.Left
    colorTitle.Parent = colorFrame

    local colorGrid = Instance.new("Frame")
    colorGrid.Size = UDim2.new(1, -10, 1, -40)
    colorGrid.Position = UDim2.new(0, 5, 0, 35)
    colorGrid.BackgroundTransparency = 1
    colorGrid.Parent = colorFrame

    local gridLayout = Instance.new("UIGridLayout")
    gridLayout.CellSize = UDim2.new(0.25, -5, 0, 30)
    gridLayout.CellPadding = UDim2.new(0, 5, 0, 5)
    gridLayout.Parent = colorGrid

    for _, colorData in ipairs(ColorPalette) do
        local colorBtn = Instance.new("TextButton")
        colorBtn.BackgroundColor3 = colorData.color
        colorBtn.Text = colorData.name
        colorBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
        colorBtn.TextSize = 10
        colorBtn.Font = Enum.Font.GothamBold
        colorBtn.TextStrokeTransparency = 0.5
        colorBtn.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
        colorBtn.BorderSizePixel = 0
        colorBtn.Parent = colorGrid

        local btnCorner = Instance.new("UICorner")
        btnCorner.CornerRadius = UDim.new(0, 6)
        btnCorner.Parent = colorBtn

        colorBtn.MouseButton1Click:Connect(function()
            Settings.ESP.color = colorData.color
            if Settings.ESP.enabled then
                for _, highlight in pairs(Settings.ESP.highlights) do
                    if highlight and highlight.Parent then
                        highlight.FillColor = colorData.color
                        highlight.OutlineColor = colorData.color
                    end
                end
                for _, nametag in pairs(Settings.ESP.nametags) do
                    if nametag and nametag.Parent then
                        local label = nametag:FindFirstChild("TextLabel")
                        if label then label.TextColor3 = colorData.color end
                    end
                end
            end
            NotificationSystem:show("Cor: " .. colorData.name, "info")
        end)
    end

    local themeFrame = Instance.new("Frame")
    themeFrame.Size = UDim2.new(1, -10, 0, 120)
    themeFrame.BackgroundColor3 = CurrentTheme.surface
    themeFrame.BorderSizePixel = 0
    themeFrame.Parent = configSection

    local themeCorner = Instance.new("UICorner")
    themeCorner.CornerRadius = UDim.new(0, 12)
    themeCorner.Parent = themeFrame

    local themeTitle = Instance.new("TextLabel")
    themeTitle.Size = UDim2.new(1, -10, 0, 30)
    themeTitle.Position = UDim2.new(0, 5, 0, 5)
    themeTitle.BackgroundTransparency = 1
    themeTitle.Text = "🎨 Theme Selector"
    themeTitle.TextColor3 = CurrentTheme.accent
    themeTitle.TextSize = 16
    themeTitle.Font = Enum.Font.GothamBold
    themeTitle.TextXAlignment = Enum.TextXAlignment.Left
    themeTitle.Parent = themeFrame

    local themeGrid = Instance.new("Frame")
    themeGrid.Size = UDim2.new(1, -10, 1, -40)
    themeGrid.Position = UDim2.new(0, 5, 0, 35)
    themeGrid.BackgroundTransparency = 1
    themeGrid.Parent = themeFrame

    local themeGridLayout = Instance.new("UIGridLayout")
    themeGridLayout.CellSize = UDim2.new(0.5, -5, 0, 35)
    themeGridLayout.CellPadding = UDim2.new(0, 5, 0, 5)
    themeGridLayout.Parent = themeGrid

    for themeName, themeColors in pairs(Themes) do
        local themeBtn = Instance.new("TextButton")
        themeBtn.BackgroundColor3 = themeColors.primary
        themeBtn.Text = themeName
        themeBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
        themeBtn.TextSize = 12
        themeBtn.Font = Enum.Font.GothamBold
        themeBtn.BorderSizePixel = 0
        themeBtn.Parent = themeGrid

        local themeBtnCorner = Instance.new("UICorner")
        themeBtnCorner.CornerRadius = UDim.new(0, 8)
        themeBtnCorner.Parent = themeBtn

        local themeBtnGradient = Instance.new("UIGradient")
        themeBtnGradient.Color = ColorSequence.new{ColorSequenceKeypoint.new(0, themeColors.primary), ColorSequenceKeypoint.new(1, themeColors.secondary)}
        themeBtnGradient.Rotation = 45
        themeBtnGradient.Parent = themeBtn

        themeBtn.MouseButton1Click:Connect(function()
            Settings.Theme = themeName
            CurrentTheme = Themes[themeName]
            NotificationSystem:show("Tema: " .. themeName, "success")
            header.BackgroundColor3 = CurrentTheme.primary
            headerGradient.Color = ColorSequence.new{ColorSequenceKeypoint.new(0, CurrentTheme.primary), ColorSequenceKeypoint.new(1, CurrentTheme.secondary)}
            mainFrame.BackgroundColor3 = CurrentTheme.background
        end)
    end

    local configButtons = Instance.new("Frame")
    configButtons.Size = UDim2.new(1, -10, 0, 150)
    configButtons.BackgroundTransparency = 1
    configButtons.Parent = configSection

    local btnLayout = Instance.new("UIListLayout")
    btnLayout.Padding = UDim.new(0, 10)
    btnLayout.Parent = configButtons

    local function createConfigButton(text, icon, color, callback)
        local btn = Instance.new("TextButton")
        btn.Size = UDim2.new(1, 0, 0, 40)
        btn.BackgroundColor3 = color
        btn.Text = icon .. " " .. text
        btn.TextColor3 = Color3.fromRGB(255, 255, 255)
        btn.TextSize = 14
        btn.Font = Enum.Font.GothamBold
        btn.BorderSizePixel = 0
        btn.Parent = configButtons

        local btnCorner = Instance.new("UICorner")
        btnCorner.CornerRadius = UDim.new(0, 10)
        btnCorner.Parent = btn

        local btnStroke = Instance.new("UIStroke")
        btnStroke.Color = color:Lerp(Color3.new(0, 0, 0), 0.2)
        btnStroke.Thickness = 2
        btnStroke.Transparency = 0.7
        btnStroke.Parent = btn

        btn.MouseButton1Click:Connect(function()
            local clickEffect = Instance.new("Frame")
            clickEffect.Size = UDim2.new(0, 0, 0, 0)
            clickEffect.Position = UDim2.new(0.5, 0, 0.5, 0)
            clickEffect.AnchorPoint = Vector2.new(0.5, 0.5)
            clickEffect.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            clickEffect.BackgroundTransparency = 0.5
            clickEffect.BorderSizePixel = 0
            clickEffect.Parent = btn

            local effectCorner = Instance.new("UICorner")
            effectCorner.CornerRadius = UDim.new(0, 10)
            effectCorner.Parent = clickEffect

            TweenService:Create(clickEffect, TweenInfo.new(0.5), {Size = UDim2.new(1, 0, 1, 0), BackgroundTransparency = 1}):Play()
            task.wait(0.5)
            pcall(function() clickEffect:Destroy() end)
            callback()
        end)
        return btn
    end

    createConfigButton("Save Config", "💾", Color3.fromRGB(34, 139, 34), function()
        local success = saveConfig()
        NotificationSystem:show(success and "Config salva!" or "Erro ao salvar", success and "success" or "error")
    end)

    createConfigButton("Load Config", "📂", Color3.fromRGB(30, 144, 255), function()
        local success = loadConfig()
        NotificationSystem:show(success and "Config carregada!" or "Sem config", success and "success" or "error")
        if success then switchTab(currentTab) end
    end)

    createConfigButton("Reset Config", "🔄", Color3.fromRGB(220, 20, 60), function()
        local success = resetConfig()
        NotificationSystem:show(success and "Config resetada!" or "Erro", success and "success" or "error")
        if success then
            cleanupExistingGUI()
            task.wait(0.5)
            createUI()
        end
    end)

    local infoFrame = Instance.new("Frame")
    infoFrame.Size = UDim2.new(1, -10, 0, 80)
    infoFrame.BackgroundColor3 = CurrentTheme.surface
    infoFrame.BorderSizePixel = 0
    infoFrame.Parent = configSection

    local infoCorner = Instance.new("UICorner")
    infoCorner.CornerRadius = UDim.new(0, 12)
    infoCorner.Parent = infoFrame

    local infoText = Instance.new("TextLabel")
    infoText.Size = UDim2.new(1, -20, 1, -20)
    infoText.Position = UDim2.new(0, 10, 0, 10)
    infoText.BackgroundTransparency = 1
    infoText.Text = "SharkHUB Premium v2.0\nDeveloped with ❤️\n\nSupport: discord.gg/sharkhub"
    infoText.TextColor3 = CurrentTheme.accent
    infoText.TextSize = 12
    infoText.Font = Enum.Font.Gotham
    infoText.TextWrapped = true
    infoText.Parent = infoFrame

    local minimizedFrame = Instance.new("Frame")
    minimizedFrame.Size = UDim2.new(0, 60, 0, 60)
    minimizedFrame.Position = UDim2.new(0, 20, 0.5, -30)
    minimizedFrame.BackgroundColor3 = CurrentTheme.primary
    minimizedFrame.BorderSizePixel = 0
    minimizedFrame.Visible = false
    minimizedFrame.Parent = screenGui

    local miniCorner = Instance.new("UICorner")
    miniCorner.CornerRadius = UDim.new(0, 15)
    miniCorner.Parent = minimizedFrame

    local miniGradient = Instance.new("UIGradient")
    miniGradient.Color = ColorSequence.new{ColorSequenceKeypoint.new(0, CurrentTheme.primary), ColorSequenceKeypoint.new(1, CurrentTheme.secondary)}
    miniGradient.Rotation = 135
    miniGradient.Parent = minimizedFrame

    local miniShadow = Instance.new("UIStroke")
    miniShadow.Color = Color3.fromRGB(0, 0, 0)
    miniShadow.Thickness = 3
    miniShadow.Transparency = 0.7
    miniShadow.Parent = minimizedFrame

    local miniIcon = Instance.new("TextLabel")
    miniIcon.Size = UDim2.new(1, 0, 1, 0)
    miniIcon.BackgroundTransparency = 1
    miniIcon.Text = "🦈"
    miniIcon.TextColor3 = Color3.fromRGB(255, 255, 255)
    miniIcon.TextSize = 30
    miniIcon.Font = Enum.Font.GothamBold
    miniIcon.Parent = minimizedFrame

    local miniButton = Instance.new("TextButton")
    miniButton.Size = UDim2.new(1, 0, 1, 0)
    miniButton.BackgroundTransparency = 1
    miniButton.Text = ""
    miniButton.Parent = minimizedFrame

    task.spawn(function()
        while minimizedFrame and minimizedFrame.Parent do
            if minimizedFrame.Visible then
                TweenService:Create(miniIcon, TweenInfo.new(1, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut), {TextSize = 35}):Play()
                task.wait(1)
                if not minimizedFrame or not minimizedFrame.Parent then break end
                TweenService:Create(miniIcon, TweenInfo.new(1, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut), {TextSize = 30}):Play()
                task.wait(1)
            else
                task.wait(2)
            end
        end
    end)

    setupDrag(mainFrame, header)
    setupDrag(minimizedFrame, minimizedFrame)

    minimizeBtn.MouseButton1Click:Connect(function()
        TweenService:Create(mainFrame, TweenInfo.new(0.3, Enum.EasingStyle.Back, Enum.EasingDirection.In), {Size = UDim2.new(0, 0, 0, 0), Position = minimizedFrame.Position}):Play()
        TweenService:Create(blur, TweenInfo.new(0.3), {Size = 0}):Play()
        task.wait(0.3)
        mainFrame.Visible = false
        minimizedFrame.Visible = true
        TweenService:Create(minimizedFrame, TweenInfo.new(0.3, Enum.EasingStyle.Back), {Size = UDim2.new(0, 60, 0, 60)}):Play()
    end)

    miniButton.MouseButton1Click:Connect(function()
        minimizedFrame.Visible = false
        mainFrame.Visible = true
        mainFrame.Size = UDim2.new(0, 0, 0, 0)
        mainFrame.Position = minimizedFrame.Position
        TweenService:Create(blur, TweenInfo.new(0.3), {Size = 10}):Play()
        TweenService:Create(mainFrame, TweenInfo.new(0.3, Enum.EasingStyle.Back), {Size = UDim2.new(0, mobile and 280 or 500, 0, mobile and 400 or 600), Position = UDim2.new(0.5, 0, 0.5, 0)}):Play()
    end)

    closeBtn.MouseButton1Click:Connect(function()
        TweenService:Create(mainFrame, TweenInfo.new(0.3, Enum.EasingStyle.Back, Enum.EasingDirection.In), {Size = UDim2.new(0, 0, 0, 0)}):Play()
        TweenService:Create(blur, TweenInfo.new(0.3), {Size = 0}):Play()
        task.wait(0.3)
        cleanup()
        pcall(function() blur:Destroy() end)
    end)

    print("🦈 SharkHUB: UI criada com sucesso!")
end

local function cleanup()
    ConnectionManager:cleanup()
    if currentESP then pcall(function() currentESP:Destroy() end) currentESP = nil end
    for _, hl in pairs(highlights) do pcall(function() if hl and hl.Parent then hl:Destroy() end end) end
    highlights = {}
    for _, highlight in pairs(Settings.ESP.highlights) do pcall(function() if highlight and highlight.Parent then highlight:Destroy() end end) end
    for _, nametag in pairs(Settings.ESP.nametags) do pcall(function() if nametag and nametag.Parent then nametag:Destroy() end end) end
    Settings.ESP.highlights = {}
    Settings.ESP.nametags = {}
    Cache:clear()
    StateManager:set("floatV1", false)
    StateManager:set("bestESP", false)
    StateManager:set("antiHit", false)
    pcall(function() if setfflag then setfflag("WorldStepMax", "-1") end end)
    cleanupExistingGUI()
end

Players.PlayerRemoving:Connect(function(player)
    if player == LocalPlayer then cleanup() end
end)

LocalPlayer.CharacterAdded:Connect(function()
    if Settings.AntiHit.enabled then
        Settings.AntiHit.enabled = false
        StateManager:set("antiHit", false)
        pcall(function() if setfflag then setfflag("WorldStepMax", "-1") end end)
        NotificationSystem:show("Anti-Hit desativado ao respawnar", "info")
    end
end)

task.spawn(function()
    pcall(function()
        createUI()
        task.wait(0.5)
        NotificationSystem:show("SharkHUB carregado!", "success")
    end)
end)

print("🦈 SharkHUB Premium v2.0 - Interface Ultra Moderna")
print("💎 Desenvolvido com animações fluidas e design responsivo")
print("✅ Script carregado! A UI deve aparecer em instantes.")
