-- SharkHUB Premium V2 - UI Compacta e Moderna
-- COPIE E EXECUTE NO SEU EXECUTOR

if not game:IsLoaded() then game.Loaded:Wait() end
task.wait(1)

local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")
local HttpService = game:GetService("HttpService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Lighting = game:GetService("Lighting")
local Workspace = workspace
local LocalPlayer = Players.LocalPlayer
local PlayerGui = LocalPlayer:WaitForChild("PlayerGui")

print("🦈 SharkHUB: Iniciando...")

local function isMobile()
    return UserInputService.TouchEnabled and not UserInputService.KeyboardEnabled
end

local ConnectionManager = {
    connections = {},
    add = function(self, name, connection)
        if self.connections[name] then
            pcall(function() self.connections[name]:Disconnect() end)
        end
        self.connections[name] = connection
    end,
    remove = function(self, name)
        if self.connections[name] then
            pcall(function() self.connections[name]:Disconnect() end)
            self.connections[name] = nil
        end
    end,
    cleanup = function(self)
        for _, connection in pairs(self.connections) do
            pcall(function() connection:Disconnect() end)
        end
        self.connections = {}
    end
}

local StateManager = {
    floatV1 = false,
    bestESP = false,
    antiHit = false,
    set = function(self, key, value) self[key] = value end,
    get = function(self, key) return self[key] end
}

local Cache = {
    instances = {},
    get = function(self, parent, name)
        if not parent then return nil end
        local key = tostring(parent) .. ":" .. name
        if not self.instances[key] then
            self.instances[key] = parent:FindFirstChild(name)
        end
        return self.instances[key]
    end,
    clear = function(self) self.instances = {} end
}

local NotificationSystem = {
    queue = {},
    showing = false,
    show = function(self, text, type)
        table.insert(self.queue, {text = text, type = type or "info"})
        if not self.showing then self:processQueue() end
    end,
    processQueue = function(self)
        if #self.queue == 0 then
            self.showing = false
            return
        end
        self.showing = true
        local data = table.remove(self.queue, 1)
        local gui = PlayerGui:FindFirstChild("SharkHUBGUI")
        if not gui then self.showing = false return end
        
        local notif = Instance.new("Frame")
        notif.Size = UDim2.new(0, 200, 0, 40)
        notif.Position = UDim2.new(1, 10, 0, 70)
        notif.BackgroundColor3 = data.type == "success" and Color3.fromRGB(46, 204, 113) 
            or data.type == "error" and Color3.fromRGB(231, 76, 60) 
            or Color3.fromRGB(52, 152, 219)
        notif.BorderSizePixel = 0
        notif.Parent = gui
        
        Instance.new("UICorner", notif).CornerRadius = UDim.new(0, 8)
        
        local label = Instance.new("TextLabel")
        label.Size = UDim2.new(1, -12, 1, 0)
        label.Position = UDim2.new(0, 6, 0, 0)
        label.BackgroundTransparency = 1
        label.Text = data.text
        label.TextColor3 = Color3.fromRGB(255, 255, 255)
        label.TextSize = 12
        label.Font = Enum.Font.GothamSemibold
        label.TextXAlignment = Enum.TextXAlignment.Left
        label.TextWrapped = true
        label.Parent = notif
        
        TweenService:Create(notif, TweenInfo.new(0.3, Enum.EasingStyle.Back), {
            Position = UDim2.new(1, -210, 0, 70)
        }):Play()
        
        task.wait(2.5)
        TweenService:Create(notif, TweenInfo.new(0.3, Enum.EasingStyle.Back, Enum.EasingDirection.In), {
            Position = UDim2.new(1, 10, 0, 70)
        }):Play()
        task.wait(0.3)
        pcall(function() notif:Destroy() end)
        self:processQueue()
    end
}

local Settings = {
    Speed = {enabled = false, value = 50},
    Jump = {enabled = false, value = 90},
    FloatV1 = {enabled = false}, 
    ESP = {enabled = false, color = Color3.fromRGB(52, 152, 219), highlights = {}, nametags = {}},
    ESPBetter = {enabled = false},
    AntiHit = {enabled = false}
}

local Theme = {
    bg = Color3.fromRGB(20, 25, 30),
    surface = Color3.fromRGB(30, 35, 40),
    primary = Color3.fromRGB(52, 152, 219),
    accent = Color3.fromRGB(46, 204, 113),
    text = Color3.fromRGB(236, 240, 241)
}

local CONFIG_FILE = "SharkHUB_Config.json"
local currentESP = nil
local highlights = {}

local function parseValue(text)
    if not text or text == "" then return 0 end
    local multipliers = {Q = 1e15, T = 1e12, B = 1e9, M = 1e6, K = 1e3}
    local number, suffix = text:match("([%d%.]+)([QTBMK]?)")
    number = tonumber(number) or 0
    return multipliers[suffix] and number * multipliers[suffix] or number
end

local function setupESPBetter()
    ConnectionManager:remove("ESPBetter")
    StateManager:set("bestESP", Settings.ESPBetter.enabled)
    
    if currentESP then pcall(function() currentESP:Destroy() end) currentESP = nil end
    for _, hl in pairs(highlights) do pcall(function() if hl and hl.Parent then hl:Destroy() end end) end
    highlights = {}
    
    if Settings.ESPBetter.enabled then
        local lastUpdate = 0
        ConnectionManager:add("ESPBetter", RunService.Heartbeat:Connect(function()
            if tick() - lastUpdate < 0.2 or not StateManager:get("bestESP") then return end
            lastUpdate = tick()

            local bestAnimal, bestValue, bestBase = nil, -math.huge, nil
            if currentESP then pcall(function() currentESP:Destroy() end) currentESP = nil end
            for _, hl in pairs(highlights) do pcall(function() if hl and hl.Parent then hl:Destroy() end end) end
            highlights = {}

            local plots = Workspace:FindFirstChild("Plots")
            if not plots then return end

            for _, plot in ipairs(plots:GetChildren()) do
                pcall(function()
                    local plotSign = plot:FindFirstChild("PlotSign")
                    if plotSign then
                        local surfaceGui = plotSign:FindFirstChild("SurfaceGui")
                        local frame = surfaceGui and surfaceGui:FindFirstChild("Frame")
                        local textLabel = frame and frame:FindFirstChild("TextLabel")
                        
                        if textLabel and textLabel.Text ~= "Empty Base" and not textLabel.Text:find(LocalPlayer.DisplayName) then
                            local animalPodiums = plot:FindFirstChild("AnimalPodiums")
                            if animalPodiums then
                                for _, podium in ipairs(animalPodiums:GetChildren()) do
                                    local base = podium:FindFirstChild("Base")
                                    local spawn = base and base:FindFirstChild("Spawn")
                                    local attach = spawn and spawn:FindFirstChild("Attachment")
                                    
                                    if attach then
                                        local overhead = attach:FindFirstChild("AnimalOverhead")
                                        if overhead then
                                            local stolen = overhead:FindFirstChild("Stolen")
                                            if not (stolen and (stolen.Text == "FUSING" or stolen.Text == "IN MACHINE" or stolen.Text == "CRAFTING")) then
                                                local gen = overhead:FindFirstChild("Generation")
                                                local rarity = overhead:FindFirstChild("Rarity")
                                                local name = overhead:FindFirstChild("DisplayName")
                                                
                                                if gen and rarity and name then
                                                    local value = parseValue(gen.Text)
                                                    if value > bestValue then
                                                        bestValue = value
                                                        bestAnimal = {attachment = attach, nome = name.Text, raridade = rarity.Text, porSegundo = gen.Text}
                                                        bestBase = base
                                                    end
                                                end
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end)
            end

            if bestAnimal and bestAnimal.attachment then
                pcall(function()
                    local billboard = Instance.new("BillboardGui")
                    billboard.Name = "BestESP"
                    billboard.AlwaysOnTop = true
                    billboard.Size = UDim2.new(0, 200, 0, 60)
                    billboard.StudsOffset = Vector3.new(0, 3, 0)
                    billboard.Parent = bestAnimal.attachment
                    
                    local back = Instance.new("Frame")
                    back.Size = UDim2.new(1, 0, 1, 0)
                    back.BackgroundColor3 = Theme.surface
                    back.BackgroundTransparency = 0.1
                    back.Parent = billboard
                    
                    Instance.new("UICorner", back).CornerRadius = UDim.new(0, 8)
                    local stroke = Instance.new("UIStroke", back)
                    stroke.Color = Theme.primary
                    stroke.Thickness = 2
                    
                    local text = Instance.new("TextLabel")
                    text.Size = UDim2.new(1, -10, 1, -10)
                    text.Position = UDim2.new(0, 5, 0, 5)
                    text.BackgroundTransparency = 1
                    text.TextColor3 = Theme.accent
                    text.TextScaled = true
                    text.Font = Enum.Font.GothamBold
                    text.Text = string.format("🎯 %s\n%s | %s", bestAnimal.nome, bestAnimal.raridade, bestAnimal.porSegundo)
                    text.Parent = back
                    currentESP = billboard

                    if bestBase then
                        local decorations = bestBase:FindFirstChild("Decorations")
                        if decorations then
                            for _, d in ipairs(decorations:GetDescendants()) do
                                if d:IsA("BasePart") then
                                    pcall(function()
                                        local hl = Instance.new("Highlight")
                                        hl.FillColor = Theme.primary
                                        hl.OutlineColor = Theme.accent
                                        hl.FillTransparency = 0.5
                                        hl.OutlineTransparency = 0
                                        hl.Parent = d
                                        highlights[d] = hl
                                    end)
                                end
                            end
                        end
                    end
                end)
            end
        end))
        NotificationSystem:show("ESP Target ativo!", "success")
    else
        NotificationSystem:show("ESP desativado", "info")
    end
end

local function setupAntiHit()
    ConnectionManager:remove("AntiHit")
    StateManager:set("antiHit", Settings.AntiHit.enabled)
    
    if Settings.AntiHit.enabled then
        task.spawn(function()
            pcall(function()
                local backpack = LocalPlayer:WaitForChild("Backpack", 5)
                local character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
                local humanoid = character:WaitForChild("Humanoid", 5)
                
                NotificationSystem:show("Ativando Anti-Hit...", "info")
                
                local packages = ReplicatedStorage:WaitForChild("Packages", 5)
                local netFolder = packages:WaitForChild("Net", 5)
                local useItemRemote = netFolder:WaitForChild("RE/UseItem", 5)
                local teleportRemote = netFolder:WaitForChild("RE/QuantumCloner/OnTeleport", 5)

                local tool = nil
                for _, name in ipairs({"Quantum Cloner", "Brainrot", "brainrot"}) do
                    tool = backpack:FindFirstChild(name) or character:FindFirstChild(name)
                    if tool then break end
                end
                
                if not tool then
                    for _, item in ipairs(backpack:GetChildren()) do
                        if item:IsA("Tool") then tool = item break end
                    end
                end
                
                if tool and tool.Parent == backpack then
                    humanoid:EquipTool(tool)
                    task.wait(0.5)
                end

                if setfflag then setfflag("WorldStepMax", "-9999999999") end
                task.wait(0.2)
                useItemRemote:FireServer()
                task.wait(1)
                teleportRemote:FireServer()
                task.wait(2)
                if setfflag then setfflag("WorldStepMax", "-1") end
                NotificationSystem:show("Anti-Hit ativo!", "success")
            end)
        end)
    else
        pcall(function() if setfflag then setfflag("WorldStepMax", "-1") end end)
        NotificationSystem:show("Anti-Hit desativado", "info")
    end
end

local function setupESPPlayers()
    ConnectionManager:remove("ESPPlayers")
    ConnectionManager:remove("ESPPlayersRemoving")
    
    for _, hl in pairs(Settings.ESP.highlights) do pcall(function() if hl and hl.Parent then hl:Destroy() end end) end
    for _, tag in pairs(Settings.ESP.nametags) do pcall(function() if tag and tag.Parent then tag:Destroy() end end) end
    Settings.ESP.highlights, Settings.ESP.nametags = {}, {}
    
    if Settings.ESP.enabled then
        local function createESP(player)
            if player == LocalPlayer then return end
            local function add()
                pcall(function()
                    local char = player.Character
                    if not char then return end
                    local hrp = char:FindFirstChild("HumanoidRootPart")
                    if not hrp then return end
                    
                    local hl = Instance.new("Highlight")
                    hl.FillColor = Settings.ESP.color
                    hl.OutlineColor = Settings.ESP.color
                    hl.FillTransparency = 0.5
                    hl.OutlineTransparency = 0
                    hl.Parent = char
                    Settings.ESP.highlights[player] = hl
                    
                    local bb = Instance.new("BillboardGui")
                    bb.AlwaysOnTop = true
                    bb.Size = UDim2.new(0, 150, 0, 40)
                    bb.StudsOffset = Vector3.new(0, 2.5, 0)
                    bb.Parent = hrp
                    
                    local lbl = Instance.new("TextLabel")
                    lbl.Size = UDim2.new(1, 0, 1, 0)
                    lbl.BackgroundTransparency = 1
                    lbl.Text = player.DisplayName
                    lbl.TextColor3 = Settings.ESP.color
                    lbl.TextSize = 16
                    lbl.Font = Enum.Font.GothamBold
                    lbl.TextStrokeTransparency = 0
                    lbl.Parent = bb
                    Settings.ESP.nametags[player] = bb
                end)
            end
            if player.Character then add() end
            player.CharacterAdded:Connect(add)
        end
        
        for _, p in ipairs(Players:GetPlayers()) do createESP(p) end
        ConnectionManager:add("ESPPlayers", Players.PlayerAdded:Connect(createESP))
        ConnectionManager:add("ESPPlayersRemoving", Players.PlayerRemoving:Connect(function(player)
            pcall(function() if Settings.ESP.highlights[player] then Settings.ESP.highlights[player]:Destroy() end end)
            pcall(function() if Settings.ESP.nametags[player] then Settings.ESP.nametags[player]:Destroy() end end)
        end))
        NotificationSystem:show("ESP Players ativo!", "success")
    else
        NotificationSystem:show("ESP desativado", "info")
    end
end

local function setupFloatV1()
    ConnectionManager:remove("FloatV1")
    StateManager:set("floatV1", Settings.FloatV1.enabled)
    if Settings.FloatV1.enabled then
        ConnectionManager:add("FloatV1", RunService.Heartbeat:Connect(function()
            pcall(function()
                local char = LocalPlayer.Character
                if char then
                    local hrp = char:FindFirstChild("HumanoidRootPart")
                    if hrp then hrp.Velocity = Workspace.CurrentCamera.CFrame.LookVector * 25 end
                end
            end)
        end))
        NotificationSystem:show("Float ativo!", "success")
    else
        NotificationSystem:show("Float desativado", "info")
    end
end

local function saveConfig()
    if not writefile then return false end
    local config = {
        Speed = Settings.Speed,
        Jump = Settings.Jump,
        FloatV1 = Settings.FloatV1,
        ESP = {enabled = Settings.ESP.enabled, color = {Settings.ESP.color.R * 255, Settings.ESP.color.G * 255, Settings.ESP.color.B * 255}},
        ESPBetter = Settings.ESPBetter,
        AntiHit = Settings.AntiHit
    }
    local ok, enc = pcall(function() return HttpService:JSONEncode(config) end)
    if ok then writefile(CONFIG_FILE, enc) return true end
    return false
end

local function loadConfig()
    if not isfile or not isfile(CONFIG_FILE) then return false end
    local ok, dec = pcall(function() return HttpService:JSONDecode(readfile(CONFIG_FILE)) end)
    if ok and dec then
        for k, v in pairs(dec) do
            if Settings[k] and type(v) == "table" then
                for sk, sv in pairs(v) do
                    if sk == "color" and type(sv) == "table" then
                        Settings[k][sk] = Color3.fromRGB(sv[1], sv[2], sv[3])
                    else
                        Settings[k][sk] = sv
                    end
                end
            end
        end
        return true
    end
    return false
end

local function cleanup()
    ConnectionManager:cleanup()
    if currentESP then pcall(function() currentESP:Destroy() end) end
    for _, hl in pairs(highlights) do pcall(function() hl:Destroy() end) end
    for _, hl in pairs(Settings.ESP.highlights) do pcall(function() hl:Destroy() end) end
    for _, tag in pairs(Settings.ESP.nametags) do pcall(function() tag:Destroy() end) end
    Cache:clear()
    StateManager:set("floatV1", false)
    StateManager:set("bestESP", false)
    StateManager:set("antiHit", false)
    pcall(function() if setfflag then setfflag("WorldStepMax", "-1") end end)
end

local function createToggle(parent, icon, text, callback, state)
    local btn = Instance.new("TextButton")
    btn.Size = UDim2.new(1, 0, 0, 36)
    btn.BackgroundColor3 = Theme.surface
    btn.BorderSizePixel = 0
    btn.Text = ""
    btn.Parent = parent
    
    Instance.new("UICorner", btn).CornerRadius = UDim.new(0, 8)
    
    local ic = Instance.new("TextLabel")
    ic.Size = UDim2.new(0, 28, 0, 28)
    ic.Position = UDim2.new(0, 6, 0.5, 0)
    ic.AnchorPoint = Vector2.new(0, 0.5)
    ic.BackgroundColor3 = Theme.primary
    ic.Text = icon
    ic.TextColor3 = Color3.fromRGB(255, 255, 255)
    ic.TextSize = 16
    ic.Font = Enum.Font.GothamBold
    ic.Parent = btn
    Instance.new("UICorner", ic).CornerRadius = UDim.new(0, 6)
    
    local lbl = Instance.new("TextLabel")
    lbl.Size = UDim2.new(0.6, 0, 1, 0)
    lbl.Position = UDim2.new(0, 40, 0, 0)
    lbl.BackgroundTransparency = 1
    lbl.Text = text
    lbl.TextColor3 = Theme.text
    lbl.TextSize = 12
    lbl.Font = Enum.Font.GothamSemibold
    lbl.TextXAlignment = Enum.TextXAlignment.Left
    lbl.Parent = btn
    
    local sw = Instance.new("Frame")
    sw.Size = UDim2.new(0, 40, 0, 20)
    sw.Position = UDim2.new(1, -46, 0.5, 0)
    sw.AnchorPoint = Vector2.new(0, 0.5)
    sw.BackgroundColor3 = state and Theme.accent or Color3.fromRGB(60, 65, 70)
    sw.BorderSizePixel = 0
    sw.Parent = btn
    Instance.new("UICorner", sw).CornerRadius = UDim.new(1, 0)
    
    local ball = Instance.new("Frame")
    ball.Size = UDim2.new(0, 16, 0, 16)
    ball.Position = state and UDim2.new(1, -18, 0.5, 0) or UDim2.new(0, 2, 0.5, 0)
    ball.AnchorPoint = Vector2.new(0, 0.5)
    ball.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    ball.BorderSizePixel = 0
    ball.Parent = sw
    Instance.new("UICorner", ball).CornerRadius = UDim.new(1, 0)
    
    local enabled = state or false
    btn.MouseButton1Click:Connect(function()
        enabled = not enabled
        TweenService:Create(sw, TweenInfo.new(0.2), {BackgroundColor3 = enabled and Theme.accent or Color3.fromRGB(60, 65, 70)}):Play()
        TweenService:Create(ball, TweenInfo.new(0.2), {Position = enabled and UDim2.new(1, -18, 0.5, 0) or UDim2.new(0, 2, 0.5, 0)}):Play()
        if callback then callback(enabled) end
    end)
end

local function createSlider(parent, icon, text, min, max, default, callback, current)
    local fr = Instance.new("Frame")
    fr.Size = UDim2.new(1, 0, 0, 60)
    fr.BackgroundColor3 = Theme.surface
    fr.BorderSizePixel = 0
    fr.Parent = parent
    Instance.new("UICorner", fr).CornerRadius = UDim.new(0, 8)
    
    local ic = Instance.new("TextLabel")
    ic.Size = UDim2.new(0, 24, 0, 24)
    ic.Position = UDim2.new(0, 6, 0, 6)
    ic.BackgroundColor3 = Theme.primary
    ic.Text = icon
    ic.TextColor3 = Color3.fromRGB(255, 255, 255)
    ic.TextSize = 14
    ic.Font = Enum.Font.GothamBold
    ic.Parent = fr
    Instance.new("UICorner", ic).CornerRadius = UDim.new(0, 5)
    
    local lbl = Instance.new("TextLabel")
    lbl.Size = UDim2.new(0.5, 0, 0, 30)
    lbl.Position = UDim2.new(0, 36, 0, 0)
    lbl.BackgroundTransparency = 1
    lbl.Text = text
    lbl.TextColor3 = Theme.text
    lbl.TextSize = 11
    lbl.Font = Enum.Font.GothamSemibold
    lbl.TextXAlignment = Enum.TextXAlignment.Left
    lbl.Parent = fr
    
    local val = current or default
    local valLbl = Instance.new("TextLabel")
    valLbl.Size = UDim2.new(0, 40, 0, 30)
    valLbl.Position = UDim2.new(1, -46, 0, 0)
    valLbl.BackgroundTransparency = 1
    valLbl.Text = tostring(val)
    valLbl.TextColor3 = Theme.accent
    valLbl.TextSize = 14
    valLbl.Font = Enum.Font.GothamBold
    valLbl.TextXAlignment = Enum.TextXAlignment.Right
    valLbl.Parent = fr
    
    local track = Instance.new("Frame")
    track.Size = UDim2.new(1, -12, 0, 6)
    track.Position = UDim2.new(0, 6, 1, -12)
    track.BackgroundColor3 = Color3.fromRGB(40, 45, 50)
    track.BorderSizePixel = 0
    track.Parent = fr
    Instance.new("UICorner", track).CornerRadius = UDim.new(1, 0)
    
    local fill = Instance.new("Frame")
    fill.Size = UDim2.new((val - min) / (max - min), 0, 1, 0)
    fill.BackgroundColor3 = Theme.primary
    fill.BorderSizePixel = 0
    fill.Parent = track
    Instance.new("UICorner", fill).CornerRadius = UDim.new(1, 0)
    
    local thumb = Instance.new("Frame")
    thumb.Size = UDim2.new(0, 14, 0, 14)
    thumb.Position = UDim2.new((val - min) / (max - min), -7, 0.5, 0)
    thumb.AnchorPoint = Vector2.new(0, 0.5)
    thumb.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    thumb.BorderSizePixel = 0
    thumb.Parent = track
    Instance.new("UICorner", thumb).CornerRadius = UDim.new(1, 0)
    
    local sliderBtn = Instance.new("TextButton")
    sliderBtn.Size = UDim2.new(1, 0, 1, 10)
    sliderBtn.Position = UDim2.new(0, 0, 0, -5)
    sliderBtn.BackgroundTransparency = 1
    sliderBtn.Text = ""
    sliderBtn.Parent = track
    
    local dragging = false
    local function update(pos)
        local rel = math.clamp((pos.X - track.AbsolutePosition.X) / track.AbsoluteSize.X, 0, 1)
        val = math.floor(min + (max - min) * rel)
        fill.Size = UDim2.new(rel, 0, 1, 0)
        thumb.Position = UDim2.new(rel, -7, 0.5, 0)
        valLbl.Text = tostring(val)
        if callback then callback(val) end
    end
    
    sliderBtn.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = true
            update(input.Position)
        end
    end)
    
    UserInputService.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = false
        end
    end)
    
    UserInputService.InputChanged:Connect(function(input)
        if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
            update(input.Position)
        end
    end)
end

local function setupDrag(frame, handle)
    local dragging, dragStart, startPos = false, nil, nil
    handle.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = true
            dragStart = input.Position
            startPos = frame.Position
        end
    end)
    UserInputService.InputChanged:Connect(function(input)
        if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
            local delta = input.Position - dragStart
            frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
        end
    end)
    UserInputService.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = false
        end
    end)
end

local function createUI()
    local existing = PlayerGui:FindFirstChild("SharkHUBGUI")
    if existing then existing:Destroy() task.wait(0.1) end
    
    local gui = Instance.new("ScreenGui")
    gui.Name = "SharkHUBGUI"
    gui.ResetOnSpawn = false
    gui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    gui.Parent = PlayerGui
    
    -- TAMANHO SUPER COMPACTO: 320x420
    local main = Instance.new("Frame")
    main.Size = UDim2.new(0, 320, 0, 420)
    main.Position = UDim2.new(0.5, 0, 0.5, 0)
    main.AnchorPoint = Vector2.new(0.5, 0.5)
    main.BackgroundColor3 = Theme.bg
    main.BorderSizePixel = 0
    main.Parent = gui
    Instance.new("UICorner", main).CornerRadius = UDim.new(0, 12)
    
    local shadow = Instance.new("UIStroke", main)
    shadow.Color = Color3.fromRGB(0, 0, 0)
    shadow.Thickness = 2
    shadow.Transparency = 0.8
    
    main.Size = UDim2.new(0, 0, 0, 0)
    TweenService:Create(main, TweenInfo.new(0.3, Enum.EasingStyle.Back), {Size = UDim2.new(0, 320, 0, 420)}):Play()
    
    -- Header compacto
    local header = Instance.new("Frame")
    header.Size = UDim2.new(1, 0, 0, 45)
    header.BackgroundColor3 = Theme.primary
    header.BorderSizePixel = 0
    header.Parent = main
    Instance.new("UICorner", header).CornerRadius = UDim.new(0, 12)
    
    local headerFix = Instance.new("Frame")
    headerFix.Size = UDim2.new(1, 0, 0, 12)
    headerFix.Position = UDim2.new(0, 0, 1, -12)
    headerFix.BackgroundColor3 = Theme.primary
    headerFix.BorderSizePixel = 0
    headerFix.Parent = header
    
    local title = Instance.new("TextLabel")
    title.Size = UDim2.new(1, -60, 1, 0)
    title.Position = UDim2.new(0, 12, 0, 0)
    title.BackgroundTransparency = 1
    title.Text = "🦈 SHARK HUB"
    title.TextColor3 = Color3.fromRGB(255, 255, 255)
    title.TextSize = 16
    title.Font = Enum.Font.GothamBold
    title.TextXAlignment = Enum.TextXAlignment.Left
    title.Parent = header
    
    local close = Instance.new("TextButton")
    close.Size = UDim2.new(0, 28, 0, 28)
    close.Position = UDim2.new(1, -36, 0.5, 0)
    close.AnchorPoint = Vector2.new(0, 0.5)
    close.BackgroundColor3 = Color3.fromRGB(231, 76, 60)
    close.Text = "×"
    close.TextColor3 = Color3.fromRGB(255, 255, 255)
    close.TextSize = 20
    close.Font = Enum.Font.GothamBold
    close.BorderSizePixel = 0
    close.Parent = header
    Instance.new("UICorner", close).CornerRadius = UDim.new(0, 6)
    
    -- Tabs compactas
    local tabs = Instance.new("Frame")
    tabs.Size = UDim2.new(1, -16, 0, 32)
    tabs.Position = UDim2.new(0, 8, 0, 53)
    tabs.BackgroundTransparency = 1
    tabs.Parent = main
    
    local tabLayout = Instance.new("UIListLayout", tabs)
    tabLayout.FillDirection = Enum.FillDirection.Horizontal
    tabLayout.Padding = UDim.new(0, 4)
    
    local sections = {}
    local tabButtons = {}
    
    local function createTab(name, icon)
        local btn = Instance.new("TextButton")
        btn.Size = UDim2.new(0.333, -3, 1, 0)
        btn.BackgroundColor3 = Theme.surface
        btn.Text = icon .. " " .. name
        btn.TextColor3 = Theme.text
        btn.TextSize = 11
        btn.Font = Enum.Font.GothamBold
        btn.BorderSizePixel = 0
        btn.Parent = tabs
        Instance.new("UICorner", btn).CornerRadius = UDim.new(0, 6)
        
        local stroke = Instance.new("UIStroke", btn)
        stroke.Color = Theme.primary
        stroke.Thickness = 0
        stroke.Transparency = 0.5
        
        tabButtons[name] = {btn = btn, stroke = stroke}
        return btn
    end
    
    local playerTab = createTab("Player", "⚡")
    local visualTab = createTab("Visual", "👁")
    local configTab = createTab("Config", "⚙")
    
    -- Content
    local content = Instance.new("Frame")
    content.Size = UDim2.new(1, -16, 1, -101)
    content.Position = UDim2.new(0, 8, 0, 93)
    content.BackgroundTransparency = 1
    content.Parent = main
    
    local function createSection(name)
        local scroll = Instance.new("ScrollingFrame")
        scroll.Size = UDim2.new(1, 0, 1, 0)
        scroll.BackgroundTransparency = 1
        scroll.BorderSizePixel = 0
        scroll.ScrollBarThickness = 3
        scroll.ScrollBarImageColor3 = Theme.primary
        scroll.CanvasSize = UDim2.new(0, 0, 0, 0)
        scroll.AutomaticCanvasSize = Enum.AutomaticSize.Y
        scroll.Visible = false
        scroll.Parent = content
        
        local layout = Instance.new("UIListLayout", scroll)
        layout.Padding = UDim.new(0, 6)
        
        sections[name] = scroll
        return scroll
    end
    
    local playerSection = createSection("Player")
    local visualSection = createSection("Visual")
    local configSection = createSection("Config")
    
    local function switchTab(name)
        for n, data in pairs(tabButtons) do
            if n == name then
                sections[n].Visible = true
                data.stroke.Thickness = 2
                TweenService:Create(data.btn, TweenInfo.new(0.2), {BackgroundColor3 = Theme.primary}):Play()
            else
                sections[n].Visible = false
                data.stroke.Thickness = 0
                TweenService:Create(data.btn, TweenInfo.new(0.2), {BackgroundColor3 = Theme.surface}):Play()
            end
        end
    end
    
    playerTab.MouseButton1Click:Connect(function() switchTab("Player") end)
    visualTab.MouseButton1Click:Connect(function() switchTab("Visual") end)
    configTab.MouseButton1Click:Connect(function() switchTab("Config") end)
    switchTab("Player")
    
    -- Player Section
    createSlider(playerSection, "⚡", "Speed", 16, 100, 50, function(v) Settings.Speed.value = v end, Settings.Speed.value)
    createToggle(playerSection, "🏃", "Enable Speed", function(enabled)
        Settings.Speed.enabled = enabled
        ConnectionManager:remove("Speed")
        if enabled then
            ConnectionManager:add("Speed", RunService.Heartbeat:Connect(function()
                pcall(function()
                    local c = LocalPlayer.Character
                    if c then
                        local h = c:FindFirstChild("Humanoid")
                        local r = c:FindFirstChild("HumanoidRootPart")
                        if h and r and h.MoveDirection.Magnitude > 0 then
                            r.Velocity = Vector3.new(h.MoveDirection.X * Settings.Speed.value, r.Velocity.Y, h.MoveDirection.Z * Settings.Speed.value)
                        end
                    end
                end)
            end))
            NotificationSystem:show("Speed ativo", "success")
        else
            NotificationSystem:show("Speed desativado", "info")
        end
    end, Settings.Speed.enabled)
    
    createSlider(playerSection, "🚀", "Jump", 50, 200, 90, function(v) Settings.Jump.value = v end, Settings.Jump.value)
    local canJump = true
    createToggle(playerSection, "🦘", "Enable Jump", function(enabled)
        Settings.Jump.enabled = enabled
        ConnectionManager:remove("Jump")
        if enabled then
            ConnectionManager:add("Jump", UserInputService.JumpRequest:Connect(function()
                if not canJump then return end
                pcall(function()
                    local c = LocalPlayer.Character
                    if c then
                        local r = c:FindFirstChild("HumanoidRootPart")
                        if r then
                            canJump = false
                            r.Velocity = Vector3.new(r.Velocity.X, Settings.Jump.value, r.Velocity.Z)
                            task.spawn(function()
                                task.wait(1.5)
                                canJump = true
                            end)
                        end
                    end
                end)
            end))
            NotificationSystem:show("Jump ativo", "success")
        else
            NotificationSystem:show("Jump desativado", "info")
        end
    end, Settings.Jump.enabled)
    
    createToggle(playerSection, "🎈", "Float Mode", function(enabled)
        Settings.FloatV1.enabled = enabled
        setupFloatV1()
    end, Settings.FloatV1.enabled)
    
    createToggle(playerSection, "🛡️", "Anti-Hit", function(enabled)
        Settings.AntiHit.enabled = enabled
        setupAntiHit()
    end, Settings.AntiHit.enabled)
    
    -- Visual Section
    createToggle(visualSection, "🎯", "ESP Best Target", function(enabled)
        Settings.ESPBetter.enabled = enabled
        setupESPBetter()
    end, Settings.ESPBetter.enabled)
    
    createToggle(visualSection, "👥", "ESP Players", function(enabled)
        Settings.ESP.enabled = enabled
        setupESPPlayers()
    end, Settings.ESP.enabled)
    
    -- Config Section
    local function createBtn(text, icon, color, callback)
        local btn = Instance.new("TextButton")
        btn.Size = UDim2.new(1, 0, 0, 36)
        btn.BackgroundColor3 = color
        btn.Text = icon .. " " .. text
        btn.TextColor3 = Color3.fromRGB(255, 255, 255)
        btn.TextSize = 12
        btn.Font = Enum.Font.GothamBold
        btn.BorderSizePixel = 0
        btn.Parent = configSection
        Instance.new("UICorner", btn).CornerRadius = UDim.new(0, 8)
        btn.MouseButton1Click:Connect(callback)
    end
    
    createBtn("Save Config", "💾", Color3.fromRGB(46, 204, 113), function()
        NotificationSystem:show(saveConfig() and "Config salva!" or "Erro", "success")
    end)
    
    createBtn("Load Config", "📂", Color3.fromRGB(52, 152, 219), function()
        NotificationSystem:show(loadConfig() and "Config carregada!" or "Sem config", "info")
    end)
    
    createBtn("Reset All", "🔄", Color3.fromRGB(231, 76, 60), function()
        cleanup()
        gui:Destroy()
        task.wait(0.3)
        createUI()
        NotificationSystem:show("Resetado!", "success")
    end)
    
    -- Minimized
    local mini = Instance.new("Frame")
    mini.Size = UDim2.new(0, 50, 0, 50)
    mini.Position = UDim2.new(0, 12, 0.5, -25)
    mini.BackgroundColor3 = Theme.primary
    mini.BorderSizePixel = 0
    mini.Visible = false
    mini.Parent = gui
    Instance.new("UICorner", mini).CornerRadius = UDim.new(0, 12)
    
    local miniIcon = Instance.new("TextLabel")
    miniIcon.Size = UDim2.new(1, 0, 1, 0)
    miniIcon.BackgroundTransparency = 1
    miniIcon.Text = "🦈"
    miniIcon.TextSize = 26
    miniIcon.Font = Enum.Font.GothamBold
    miniIcon.Parent = mini
    
    local miniBtn = Instance.new("TextButton")
    miniBtn.Size = UDim2.new(1, 0, 1, 0)
    miniBtn.BackgroundTransparency = 1
    miniBtn.Text = ""
    miniBtn.Parent = mini
    
    setupDrag(main, header)
    setupDrag(mini, mini)
    
    local minimize = Instance.new("TextButton")
    minimize.Size = UDim2.new(0, 28, 0, 28)
    minimize.Position = UDim2.new(1, -68, 0.5, 0)
    minimize.AnchorPoint = Vector2.new(0, 0.5)
    minimize.BackgroundColor3 = Color3.fromRGB(241, 196, 15)
    minimize.Text = "—"
    minimize.TextSize = 16
    minimize.Font = Enum.Font.GothamBold
    minimize.BorderSizePixel = 0
    minimize.Parent = header
    Instance.new("UICorner", minimize).CornerRadius = UDim.new(0, 6)
    
    minimize.MouseButton1Click:Connect(function()
        TweenService:Create(main, TweenInfo.new(0.3, Enum.EasingStyle.Back, Enum.EasingDirection.In), {
            Size = UDim2.new(0, 0, 0, 0)
        }):Play()
        task.wait(0.3)
        main.Visible = false
        mini.Visible = true
    end)
    
    miniBtn.MouseButton1Click:Connect(function()
        mini.Visible = false
        main.Visible = true
        TweenService:Create(main, TweenInfo.new(0.3, Enum.EasingStyle.Back), {
            Size = UDim2.new(0, 320, 0, 420)
        }):Play()
    end)
    
    close.MouseButton1Click:Connect(function()
        TweenService:Create(main, TweenInfo.new(0.3, Enum.EasingStyle.Back, Enum.EasingDirection.In), {
            Size = UDim2.new(0, 0, 0, 0)
        }):Play()
        task.wait(0.3)
        cleanup()
        gui:Destroy()
    end)
    
    print("🦈 UI criada!")
end

Players.PlayerRemoving:Connect(function(p)
    if p == LocalPlayer then cleanup() end
end)

LocalPlayer.CharacterAdded:Connect(function()
    if Settings.AntiHit.enabled then
        Settings.AntiHit.enabled = false
        StateManager:set("antiHit", false)
        pcall(function() if setfflag then setfflag("WorldStepMax", "-1") end end)
        NotificationSystem:show("Anti-Hit desativado", "info")
    end
end)

task.spawn(function()
    pcall(createUI)
    task.wait(0.5)
    NotificationSystem:show("SharkHUB carregado!", "success")
end)

print("🦈 SharkHUB Premium V2")
print("✅ UI Compacta Moderna")
print("📦 320x420 pixels")
